// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/worker.proto

#include "tensorflow/core/protobuf/worker.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CostGraphDef;
}  // namespace protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto
namespace protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DeviceAttributes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DeviceLocality;
}  // namespace protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto
namespace protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_GraphDef;
}  // namespace protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto
namespace protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StepStats;
}  // namespace protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto
namespace protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TensorProto;
}  // namespace protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto
namespace protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TensorShapeProto;
}  // namespace protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_GraphOptions;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DebugOptions;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_NamedTensorProto;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto
namespace protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ServerDef;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExecutorOpts;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StepSequence;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TraceOpts;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LabeledStepStats;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto
namespace tensorflow {
class GetStatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetStatusRequest>
      _instance;
} _GetStatusRequest_default_instance_;
class GetStatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetStatusResponse>
      _instance;
} _GetStatusResponse_default_instance_;
class CreateWorkerSessionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateWorkerSessionRequest>
      _instance;
} _CreateWorkerSessionRequest_default_instance_;
class CreateWorkerSessionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateWorkerSessionResponse>
      _instance;
} _CreateWorkerSessionResponse_default_instance_;
class DeleteWorkerSessionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteWorkerSessionRequest>
      _instance;
} _DeleteWorkerSessionRequest_default_instance_;
class DeleteWorkerSessionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteWorkerSessionResponse>
      _instance;
} _DeleteWorkerSessionResponse_default_instance_;
class RegisterGraphRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterGraphRequest>
      _instance;
} _RegisterGraphRequest_default_instance_;
class RegisterGraphResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterGraphResponse>
      _instance;
} _RegisterGraphResponse_default_instance_;
class DeregisterGraphRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeregisterGraphRequest>
      _instance;
} _DeregisterGraphRequest_default_instance_;
class DeregisterGraphResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeregisterGraphResponse>
      _instance;
} _DeregisterGraphResponse_default_instance_;
class CleanupAllRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CleanupAllRequest>
      _instance;
} _CleanupAllRequest_default_instance_;
class CleanupAllResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CleanupAllResponse>
      _instance;
} _CleanupAllResponse_default_instance_;
class ExecutorOptsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecutorOpts>
      _instance;
} _ExecutorOpts_default_instance_;
class RunGraphRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunGraphRequest>
      _instance;
} _RunGraphRequest_default_instance_;
class RunGraphResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunGraphResponse>
      _instance;
} _RunGraphResponse_default_instance_;
class CleanupGraphRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CleanupGraphRequest>
      _instance;
} _CleanupGraphRequest_default_instance_;
class CleanupGraphResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CleanupGraphResponse>
      _instance;
} _CleanupGraphResponse_default_instance_;
class RecvTensorRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecvTensorRequest>
      _instance;
} _RecvTensorRequest_default_instance_;
class RecvTensorResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecvTensorResponse>
      _instance;
} _RecvTensorResponse_default_instance_;
class LoggingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoggingRequest>
      _instance;
} _LoggingRequest_default_instance_;
class LabeledStepStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LabeledStepStats>
      _instance;
} _LabeledStepStats_default_instance_;
class LoggingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoggingResponse>
      _instance;
} _LoggingResponse_default_instance_;
class TraceOptsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TraceOpts>
      _instance;
} _TraceOpts_default_instance_;
class TracingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TracingRequest>
      _instance;
} _TracingRequest_default_instance_;
class TracingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TracingResponse>
      _instance;
} _TracingResponse_default_instance_;
class RecvBufRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecvBufRequest>
      _instance;
} _RecvBufRequest_default_instance_;
class RecvBufResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecvBufResponse>
      _instance;
} _RecvBufResponse_default_instance_;
class CompleteGroupRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompleteGroupRequest>
      _instance;
} _CompleteGroupRequest_default_instance_;
class CompleteGroupResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompleteGroupResponse>
      _instance;
} _CompleteGroupResponse_default_instance_;
class CompleteInstanceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompleteInstanceRequest>
      _instance;
} _CompleteInstanceRequest_default_instance_;
class CompleteInstanceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompleteInstanceResponse>
      _instance;
} _CompleteInstanceResponse_default_instance_;
class GetStepSequenceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetStepSequenceRequest>
      _instance;
} _GetStepSequenceRequest_default_instance_;
class StepSequenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StepSequence>
      _instance;
} _StepSequence_default_instance_;
class GetStepSequenceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetStepSequenceResponse>
      _instance;
} _GetStepSequenceResponse_default_instance_;
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto {
static void InitDefaultsGetStatusRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_GetStatusRequest_default_instance_;
    new (ptr) ::tensorflow::GetStatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::GetStatusRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetStatusRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetStatusRequest}, {}};

static void InitDefaultsGetStatusResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_GetStatusResponse_default_instance_;
    new (ptr) ::tensorflow::GetStatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::GetStatusResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetStatusResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetStatusResponse}, {
      &protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::scc_info_DeviceAttributes.base,}};

static void InitDefaultsCreateWorkerSessionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CreateWorkerSessionRequest_default_instance_;
    new (ptr) ::tensorflow::CreateWorkerSessionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CreateWorkerSessionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateWorkerSessionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateWorkerSessionRequest}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::scc_info_ServerDef.base,}};

static void InitDefaultsCreateWorkerSessionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CreateWorkerSessionResponse_default_instance_;
    new (ptr) ::tensorflow::CreateWorkerSessionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CreateWorkerSessionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateWorkerSessionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateWorkerSessionResponse}, {}};

static void InitDefaultsDeleteWorkerSessionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_DeleteWorkerSessionRequest_default_instance_;
    new (ptr) ::tensorflow::DeleteWorkerSessionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::DeleteWorkerSessionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteWorkerSessionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteWorkerSessionRequest}, {}};

static void InitDefaultsDeleteWorkerSessionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_DeleteWorkerSessionResponse_default_instance_;
    new (ptr) ::tensorflow::DeleteWorkerSessionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::DeleteWorkerSessionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteWorkerSessionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteWorkerSessionResponse}, {}};

static void InitDefaultsRegisterGraphRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_RegisterGraphRequest_default_instance_;
    new (ptr) ::tensorflow::RegisterGraphRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::RegisterGraphRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_RegisterGraphRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRegisterGraphRequest}, {
      &protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::scc_info_GraphDef.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::scc_info_GraphOptions.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::scc_info_DebugOptions.base,}};

static void InitDefaultsRegisterGraphResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_RegisterGraphResponse_default_instance_;
    new (ptr) ::tensorflow::RegisterGraphResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::RegisterGraphResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegisterGraphResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegisterGraphResponse}, {}};

static void InitDefaultsDeregisterGraphRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_DeregisterGraphRequest_default_instance_;
    new (ptr) ::tensorflow::DeregisterGraphRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::DeregisterGraphRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeregisterGraphRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeregisterGraphRequest}, {}};

static void InitDefaultsDeregisterGraphResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_DeregisterGraphResponse_default_instance_;
    new (ptr) ::tensorflow::DeregisterGraphResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::DeregisterGraphResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeregisterGraphResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeregisterGraphResponse}, {}};

static void InitDefaultsCleanupAllRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CleanupAllRequest_default_instance_;
    new (ptr) ::tensorflow::CleanupAllRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CleanupAllRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CleanupAllRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCleanupAllRequest}, {}};

static void InitDefaultsCleanupAllResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CleanupAllResponse_default_instance_;
    new (ptr) ::tensorflow::CleanupAllResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CleanupAllResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CleanupAllResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCleanupAllResponse}, {}};

static void InitDefaultsExecutorOpts() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_ExecutorOpts_default_instance_;
    new (ptr) ::tensorflow::ExecutorOpts();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::ExecutorOpts::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExecutorOpts =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExecutorOpts}, {}};

static void InitDefaultsRunGraphRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_RunGraphRequest_default_instance_;
    new (ptr) ::tensorflow::RunGraphRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::RunGraphRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RunGraphRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRunGraphRequest}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_ExecutorOpts.base,
      &protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::scc_info_NamedTensorProto.base,}};

static void InitDefaultsRunGraphResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_RunGraphResponse_default_instance_;
    new (ptr) ::tensorflow::RunGraphResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::RunGraphResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_RunGraphResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsRunGraphResponse}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::scc_info_NamedTensorProto.base,
      &protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::scc_info_StepStats.base,
      &protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::scc_info_CostGraphDef.base,
      &protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::scc_info_GraphDef.base,}};

static void InitDefaultsCleanupGraphRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CleanupGraphRequest_default_instance_;
    new (ptr) ::tensorflow::CleanupGraphRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CleanupGraphRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CleanupGraphRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCleanupGraphRequest}, {}};

static void InitDefaultsCleanupGraphResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CleanupGraphResponse_default_instance_;
    new (ptr) ::tensorflow::CleanupGraphResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CleanupGraphResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CleanupGraphResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCleanupGraphResponse}, {}};

static void InitDefaultsRecvTensorRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_RecvTensorRequest_default_instance_;
    new (ptr) ::tensorflow::RecvTensorRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::RecvTensorRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RecvTensorRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRecvTensorRequest}, {
      &protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::scc_info_DeviceLocality.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsRecvTensorResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_RecvTensorResponse_default_instance_;
    new (ptr) ::tensorflow::RecvTensorResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::RecvTensorResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RecvTensorResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRecvTensorResponse}, {
      &protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::scc_info_TensorProto.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsLoggingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_LoggingRequest_default_instance_;
    new (ptr) ::tensorflow::LoggingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::LoggingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoggingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoggingRequest}, {}};

static void InitDefaultsLabeledStepStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_LabeledStepStats_default_instance_;
    new (ptr) ::tensorflow::LabeledStepStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::LabeledStepStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LabeledStepStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLabeledStepStats}, {
      &protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::scc_info_StepStats.base,}};

static void InitDefaultsLoggingResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_LoggingResponse_default_instance_;
    new (ptr) ::tensorflow::LoggingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::LoggingResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LoggingResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLoggingResponse}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_LabeledStepStats.base,}};

static void InitDefaultsTraceOpts() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_TraceOpts_default_instance_;
    new (ptr) ::tensorflow::TraceOpts();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::TraceOpts::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TraceOpts =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTraceOpts}, {}};

static void InitDefaultsTracingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_TracingRequest_default_instance_;
    new (ptr) ::tensorflow::TracingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::TracingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TracingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTracingRequest}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_TraceOpts.base,}};

static void InitDefaultsTracingResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_TracingResponse_default_instance_;
    new (ptr) ::tensorflow::TracingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::TracingResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TracingResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTracingResponse}, {}};

static void InitDefaultsRecvBufRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_RecvBufRequest_default_instance_;
    new (ptr) ::tensorflow::RecvBufRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::RecvBufRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RecvBufRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRecvBufRequest}, {
      &protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::scc_info_DeviceLocality.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsRecvBufResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_RecvBufResponse_default_instance_;
    new (ptr) ::tensorflow::RecvBufResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::RecvBufResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RecvBufResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRecvBufResponse}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsCompleteGroupRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CompleteGroupRequest_default_instance_;
    new (ptr) ::tensorflow::CompleteGroupRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CompleteGroupRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CompleteGroupRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCompleteGroupRequest}, {}};

static void InitDefaultsCompleteGroupResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CompleteGroupResponse_default_instance_;
    new (ptr) ::tensorflow::CompleteGroupResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CompleteGroupResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CompleteGroupResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCompleteGroupResponse}, {}};

static void InitDefaultsCompleteInstanceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CompleteInstanceRequest_default_instance_;
    new (ptr) ::tensorflow::CompleteInstanceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CompleteInstanceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CompleteInstanceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCompleteInstanceRequest}, {
      &protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::scc_info_TensorShapeProto.base,}};

static void InitDefaultsCompleteInstanceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_CompleteInstanceResponse_default_instance_;
    new (ptr) ::tensorflow::CompleteInstanceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::CompleteInstanceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CompleteInstanceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCompleteInstanceResponse}, {}};

static void InitDefaultsGetStepSequenceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_GetStepSequenceRequest_default_instance_;
    new (ptr) ::tensorflow::GetStepSequenceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::GetStepSequenceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetStepSequenceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetStepSequenceRequest}, {}};

static void InitDefaultsStepSequence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_StepSequence_default_instance_;
    new (ptr) ::tensorflow::StepSequence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::StepSequence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StepSequence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStepSequence}, {}};

static void InitDefaultsGetStepSequenceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_GetStepSequenceResponse_default_instance_;
    new (ptr) ::tensorflow::GetStepSequenceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::GetStepSequenceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetStepSequenceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetStepSequenceResponse}, {
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_StepSequence.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GetStatusRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetStatusResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateWorkerSessionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateWorkerSessionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteWorkerSessionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteWorkerSessionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterGraphRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterGraphResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeregisterGraphRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeregisterGraphResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CleanupAllRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CleanupAllResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecutorOpts.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunGraphRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunGraphResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CleanupGraphRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CleanupGraphResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecvTensorRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecvTensorResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoggingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LabeledStepStats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoggingResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TraceOpts.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TracingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TracingResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecvBufRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecvBufResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompleteGroupRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompleteGroupResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompleteInstanceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompleteInstanceResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetStepSequenceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StepSequence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetStepSequenceResponse.base);
}

::google::protobuf::Metadata file_level_metadata[34];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GetStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GetStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GetStatusResponse, device_attributes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CreateWorkerSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CreateWorkerSessionRequest, session_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CreateWorkerSessionRequest, server_def_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CreateWorkerSessionRequest, isolate_session_state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CreateWorkerSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DeleteWorkerSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DeleteWorkerSessionRequest, session_handle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DeleteWorkerSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RegisterGraphRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RegisterGraphRequest, session_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RegisterGraphRequest, create_worker_session_called_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RegisterGraphRequest, graph_def_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RegisterGraphRequest, has_control_flow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RegisterGraphRequest, graph_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RegisterGraphRequest, debug_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RegisterGraphRequest, collective_graph_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RegisterGraphResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RegisterGraphResponse, graph_handle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DeregisterGraphRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DeregisterGraphRequest, session_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DeregisterGraphRequest, create_worker_session_called_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DeregisterGraphRequest, graph_handle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::DeregisterGraphResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CleanupAllRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CleanupAllRequest, container_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CleanupAllResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ExecutorOpts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ExecutorOpts, record_costs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ExecutorOpts, record_timeline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ExecutorOpts, record_partition_graphs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::ExecutorOpts, report_tensor_allocations_upon_oom_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphRequest, session_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphRequest, create_worker_session_called_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphRequest, graph_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphRequest, step_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphRequest, exec_opts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphRequest, send_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphRequest, recv_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphRequest, is_partial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphRequest, is_last_partial_run_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphRequest, store_errors_in_response_body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphResponse, recv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphResponse, step_stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphResponse, cost_graph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphResponse, partition_graph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphResponse, status_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RunGraphResponse, status_error_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CleanupGraphRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CleanupGraphRequest, step_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CleanupGraphResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvTensorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvTensorRequest, step_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvTensorRequest, rendezvous_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvTensorRequest, dma_ok_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvTensorRequest, client_locality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvTensorRequest, server_locality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvTensorRequest, transport_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvTensorRequest, request_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvTensorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvTensorResponse, tensor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvTensorResponse, is_dead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvTensorResponse, send_start_micros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvTensorResponse, transport_options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::LoggingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::LoggingRequest, enable_rpc_logging_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::LoggingRequest, disable_rpc_logging_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::LoggingRequest, clear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::LoggingRequest, fetch_step_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::LabeledStepStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::LabeledStepStats, step_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::LabeledStepStats, step_stats_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::LoggingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::LoggingResponse, step_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TraceOpts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TraceOpts, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TraceOpts, use_step_profiler_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TraceOpts, use_kernel_profiler_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TraceOpts, use_extended_profiler_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TraceOpts, use_gpu_profiler_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TraceOpts, use_sample_profiler_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TracingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TracingRequest, options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::TracingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvBufRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvBufRequest, step_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvBufRequest, buf_rendezvous_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvBufRequest, num_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvBufRequest, buf_ptr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvBufRequest, client_locality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvBufRequest, server_locality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvBufRequest, transport_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvBufRequest, src_device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvBufRequest, dst_device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvBufRequest, request_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvBufResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvBufResponse, buf_ptr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvBufResponse, num_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvBufResponse, is_dead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvBufResponse, transport_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::RecvBufResponse, send_start_micros_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteGroupRequest, group_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteGroupRequest, group_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteGroupRequest, device_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteGroupRequest, device_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteGroupResponse, group_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteGroupResponse, group_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteGroupResponse, device_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteGroupResponse, num_tasks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteGroupResponse, device_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteGroupResponse, task_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteInstanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteInstanceRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteInstanceRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteInstanceRequest, data_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteInstanceRequest, shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteInstanceRequest, group_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteInstanceRequest, group_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteInstanceRequest, instance_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteInstanceRequest, device_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteInstanceRequest, subdiv_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteInstanceRequest, device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteInstanceRequest, is_source_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteInstanceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteInstanceResponse, instance_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::CompleteInstanceResponse, source_rank_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GetStepSequenceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GetStepSequenceRequest, graph_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::StepSequence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::StepSequence, graph_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::StepSequence, next_step_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GetStepSequenceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::GetStepSequenceResponse, step_sequence_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::GetStatusRequest)},
  { 5, -1, sizeof(::tensorflow::GetStatusResponse)},
  { 11, -1, sizeof(::tensorflow::CreateWorkerSessionRequest)},
  { 19, -1, sizeof(::tensorflow::CreateWorkerSessionResponse)},
  { 24, -1, sizeof(::tensorflow::DeleteWorkerSessionRequest)},
  { 30, -1, sizeof(::tensorflow::DeleteWorkerSessionResponse)},
  { 35, -1, sizeof(::tensorflow::RegisterGraphRequest)},
  { 47, -1, sizeof(::tensorflow::RegisterGraphResponse)},
  { 53, -1, sizeof(::tensorflow::DeregisterGraphRequest)},
  { 61, -1, sizeof(::tensorflow::DeregisterGraphResponse)},
  { 66, -1, sizeof(::tensorflow::CleanupAllRequest)},
  { 72, -1, sizeof(::tensorflow::CleanupAllResponse)},
  { 77, -1, sizeof(::tensorflow::ExecutorOpts)},
  { 86, -1, sizeof(::tensorflow::RunGraphRequest)},
  { 101, -1, sizeof(::tensorflow::RunGraphResponse)},
  { 112, -1, sizeof(::tensorflow::CleanupGraphRequest)},
  { 118, -1, sizeof(::tensorflow::CleanupGraphResponse)},
  { 123, -1, sizeof(::tensorflow::RecvTensorRequest)},
  { 135, -1, sizeof(::tensorflow::RecvTensorResponse)},
  { 144, -1, sizeof(::tensorflow::LoggingRequest)},
  { 153, -1, sizeof(::tensorflow::LabeledStepStats)},
  { 160, -1, sizeof(::tensorflow::LoggingResponse)},
  { 166, -1, sizeof(::tensorflow::TraceOpts)},
  { 177, -1, sizeof(::tensorflow::TracingRequest)},
  { 183, -1, sizeof(::tensorflow::TracingResponse)},
  { 188, -1, sizeof(::tensorflow::RecvBufRequest)},
  { 203, -1, sizeof(::tensorflow::RecvBufResponse)},
  { 213, -1, sizeof(::tensorflow::CompleteGroupRequest)},
  { 222, -1, sizeof(::tensorflow::CompleteGroupResponse)},
  { 233, -1, sizeof(::tensorflow::CompleteInstanceRequest)},
  { 249, -1, sizeof(::tensorflow::CompleteInstanceResponse)},
  { 256, -1, sizeof(::tensorflow::GetStepSequenceRequest)},
  { 262, -1, sizeof(::tensorflow::StepSequence)},
  { 269, -1, sizeof(::tensorflow::GetStepSequenceResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_GetStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_GetStatusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CreateWorkerSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CreateWorkerSessionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_DeleteWorkerSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_DeleteWorkerSessionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_RegisterGraphRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_RegisterGraphResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_DeregisterGraphRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_DeregisterGraphResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CleanupAllRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CleanupAllResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_ExecutorOpts_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_RunGraphRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_RunGraphResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CleanupGraphRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CleanupGraphResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_RecvTensorRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_RecvTensorResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_LoggingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_LabeledStepStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_LoggingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_TraceOpts_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_TracingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_TracingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_RecvBufRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_RecvBufResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CompleteGroupRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CompleteGroupResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CompleteInstanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_CompleteInstanceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_GetStepSequenceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_StepSequence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::_GetStepSequenceResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tensorflow/core/protobuf/worker.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 34);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n%tensorflow/core/protobuf/worker.proto\022"
      "\ntensorflow\032\031google/protobuf/any.proto\032*"
      "tensorflow/core/framework/cost_graph.pro"
      "to\032*tensorflow/core/framework/step_stats"
      ".proto\0321tensorflow/core/framework/device"
      "_attributes.proto\032%tensorflow/core/frame"
      "work/graph.proto\032&tensorflow/core/framew"
      "ork/tensor.proto\032,tensorflow/core/framew"
      "ork/tensor_shape.proto\032%tensorflow/core/"
      "framework/types.proto\032*tensorflow/core/l"
      "ib/core/error_codes.proto\032%tensorflow/co"
      "re/protobuf/config.proto\032$tensorflow/cor"
      "e/protobuf/debug.proto\032+tensorflow/core/"
      "protobuf/named_tensor.proto\0320tensorflow/"
      "core/protobuf/tensorflow_server.proto\"\022\n"
      "\020GetStatusRequest\"L\n\021GetStatusResponse\0227"
      "\n\021device_attributes\030\001 \003(\0132\034.tensorflow.D"
      "eviceAttributes\"~\n\032CreateWorkerSessionRe"
      "quest\022\026\n\016session_handle\030\001 \001(\t\022)\n\nserver_"
      "def\030\002 \001(\0132\025.tensorflow.ServerDef\022\035\n\025isol"
      "ate_session_state\030\003 \001(\010\"\035\n\033CreateWorkerS"
      "essionResponse\"4\n\032DeleteWorkerSessionReq"
      "uest\022\026\n\016session_handle\030\001 \001(\t\"\035\n\033DeleteWo"
      "rkerSessionResponse\"\233\002\n\024RegisterGraphReq"
      "uest\022\026\n\016session_handle\030\001 \001(\t\022$\n\034create_w"
      "orker_session_called\030\006 \001(\010\022\'\n\tgraph_def\030"
      "\002 \001(\0132\024.tensorflow.GraphDef\022\034\n\020has_contr"
      "ol_flow\030\003 \001(\010B\002\030\001\022/\n\rgraph_options\030\004 \001(\013"
      "2\030.tensorflow.GraphOptions\022/\n\rdebug_opti"
      "ons\030\005 \001(\0132\030.tensorflow.DebugOptions\022\034\n\024c"
      "ollective_graph_key\030\007 \001(\003\"-\n\025RegisterGra"
      "phResponse\022\024\n\014graph_handle\030\001 \001(\t\"l\n\026Dere"
      "gisterGraphRequest\022\026\n\016session_handle\030\002 \001"
      "(\t\022$\n\034create_worker_session_called\030\003 \001(\010"
      "\022\024\n\014graph_handle\030\001 \001(\t\"\031\n\027DeregisterGrap"
      "hResponse\"&\n\021CleanupAllRequest\022\021\n\tcontai"
      "ner\030\001 \003(\t\"\024\n\022CleanupAllResponse\"\212\001\n\014Exec"
      "utorOpts\022\024\n\014record_costs\030\001 \001(\010\022\027\n\017record"
      "_timeline\030\003 \001(\010\022\037\n\027record_partition_grap"
      "hs\030\004 \001(\010\022*\n\"report_tensor_allocations_up"
      "on_oom\030\005 \001(\010\"\271\002\n\017RunGraphRequest\022\026\n\016sess"
      "ion_handle\030\010 \001(\t\022$\n\034create_worker_sessio"
      "n_called\030\n \001(\010\022\024\n\014graph_handle\030\001 \001(\t\022\017\n\007"
      "step_id\030\002 \001(\003\022+\n\texec_opts\030\005 \001(\0132\030.tenso"
      "rflow.ExecutorOpts\022*\n\004send\030\003 \003(\0132\034.tenso"
      "rflow.NamedTensorProto\022\020\n\010recv_key\030\004 \003(\t"
      "\022\022\n\nis_partial\030\006 \001(\010\022\033\n\023is_last_partial_"
      "run\030\007 \001(\010\022%\n\035store_errors_in_response_bo"
      "dy\030\t \001(\010\"\221\002\n\020RunGraphResponse\022*\n\004recv\030\001 "
      "\003(\0132\034.tensorflow.NamedTensorProto\022)\n\nste"
      "p_stats\030\002 \001(\0132\025.tensorflow.StepStats\022,\n\n"
      "cost_graph\030\003 \001(\0132\030.tensorflow.CostGraphD"
      "ef\022-\n\017partition_graph\030\004 \003(\0132\024.tensorflow"
      ".GraphDef\022+\n\013status_code\030\005 \001(\0162\026.tensorf"
      "low.error.Code\022\034\n\024status_error_message\030\006"
      " \001(\t\"&\n\023CleanupGraphRequest\022\017\n\007step_id\030\001"
      " \001(\003\"\026\n\024CleanupGraphResponse\"\373\001\n\021RecvTen"
      "sorRequest\022\017\n\007step_id\030\001 \001(\003\022\026\n\016rendezvou"
      "s_key\030\002 \001(\t\022\016\n\006dma_ok\030\003 \001(\010\0223\n\017client_lo"
      "cality\030\004 \001(\0132\032.tensorflow.DeviceLocality"
      "\0223\n\017server_locality\030\005 \001(\0132\032.tensorflow.D"
      "eviceLocality\022/\n\021transport_options\030\006 \001(\013"
      "2\024.google.protobuf.Any\022\022\n\nrequest_id\030\007 \001"
      "(\003\"\232\001\n\022RecvTensorResponse\022\'\n\006tensor\030\001 \001("
      "\0132\027.tensorflow.TensorProto\022\017\n\007is_dead\030\002 "
      "\001(\010\022\031\n\021send_start_micros\030\003 \001(\003\022/\n\021transp"
      "ort_options\030\004 \001(\0132\024.google.protobuf.Any\""
      "o\n\016LoggingRequest\022\032\n\022enable_rpc_logging\030"
      "\001 \001(\010\022\033\n\023disable_rpc_logging\030\004 \001(\010\022\r\n\005cl"
      "ear\030\002 \001(\010\022\025\n\rfetch_step_id\030\003 \003(\003\"N\n\020Labe"
      "ledStepStats\022\017\n\007step_id\030\001 \001(\003\022)\n\nstep_st"
      "ats\030\002 \001(\0132\025.tensorflow.StepStats\"=\n\017Logg"
      "ingResponse\022*\n\004step\030\001 \003(\0132\034.tensorflow.L"
      "abeledStepStats\"\253\001\n\tTraceOpts\022\020\n\010duratio"
      "n\030\001 \001(\001\022\031\n\021use_step_profiler\030\002 \001(\010\022\033\n\023us"
      "e_kernel_profiler\030\003 \001(\010\022\035\n\025use_extended_"
      "profiler\030\004 \001(\010\022\030\n\020use_gpu_profiler\030\005 \001(\010"
      "\022\033\n\023use_sample_profiler\030\006 \001(\010\"8\n\016Tracing"
      "Request\022&\n\007options\030\001 \001(\0132\025.tensorflow.Tr"
      "aceOpts\"\021\n\017TracingResponse\"\270\002\n\016RecvBufRe"
      "quest\022\017\n\007step_id\030\001 \001(\003\022\032\n\022buf_rendezvous"
      "_key\030\002 \001(\t\022\021\n\tnum_bytes\030\003 \001(\003\022\017\n\007buf_ptr"
      "\030\004 \001(\006\0223\n\017client_locality\030\005 \001(\0132\032.tensor"
      "flow.DeviceLocality\0223\n\017server_locality\030\006"
      " \001(\0132\032.tensorflow.DeviceLocality\022/\n\021tran"
      "sport_options\030\007 \001(\0132\024.google.protobuf.An"
      "y\022\022\n\nsrc_device\030\010 \001(\t\022\022\n\ndst_device\030\t \001("
      "\t\022\022\n\nrequest_id\030\n \001(\003\"\222\001\n\017RecvBufRespons"
      "e\022\017\n\007buf_ptr\030\001 \001(\006\022\021\n\tnum_bytes\030\002 \001(\003\022\017\n"
      "\007is_dead\030\003 \001(\010\022/\n\021transport_options\030\004 \001("
      "\0132\024.google.protobuf.Any\022\031\n\021send_start_mi"
      "cros\030\005 \001(\003\"g\n\024CompleteGroupRequest\022\021\n\tgr"
      "oup_key\030\001 \001(\005\022\022\n\ngroup_size\030\002 \001(\005\022\023\n\013dev"
      "ice_type\030\003 \001(\t\022\023\n\013device_name\030\004 \003(\t\"\216\001\n\025"
      "CompleteGroupResponse\022\021\n\tgroup_key\030\001 \001(\005"
      "\022\022\n\ngroup_size\030\002 \001(\005\022\023\n\013device_type\030\003 \001("
      "\t\022\021\n\tnum_tasks\030\004 \001(\005\022\023\n\013device_name\030\005 \003("
      "\t\022\021\n\ttask_name\030\006 \003(\t\"\227\002\n\027CompleteInstanc"
      "eRequest\022\014\n\004name\030\001 \001(\t\022\014\n\004type\030\002 \001(\005\022\'\n\t"
      "data_type\030\003 \001(\0162\024.tensorflow.DataType\022+\n"
      "\005shape\030\004 \001(\0132\034.tensorflow.TensorShapePro"
      "to\022\021\n\tgroup_key\030\005 \001(\005\022\022\n\ngroup_size\030\006 \001("
      "\005\022\024\n\014instance_key\030\007 \001(\005\022\023\n\013device_type\030\010"
      " \001(\t\022\025\n\rsubdiv_offset\030\t \003(\005\022\016\n\006device\030\n "
      "\001(\t\022\021\n\tis_source\030\013 \001(\010\"E\n\030CompleteInstan"
      "ceResponse\022\024\n\014instance_key\030\001 \001(\005\022\023\n\013sour"
      "ce_rank\030\002 \001(\005\"+\n\026GetStepSequenceRequest\022"
      "\021\n\tgraph_key\030\001 \003(\003\"7\n\014StepSequence\022\021\n\tgr"
      "aph_key\030\001 \001(\003\022\024\n\014next_step_id\030\002 \001(\003\"J\n\027G"
      "etStepSequenceResponse\022/\n\rstep_sequence\030"
      "\001 \003(\0132\030.tensorflow.StepSequenceBm\n\032org.t"
      "ensorflow.distruntimeB\014WorkerProtosP\001Z<g"
      "ithub.com/tensorflow/tensorflow/tensorfl"
      "ow/go/core/protobuf\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4550);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/worker.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::AddDescriptors();
  ::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto
namespace tensorflow {

// ===================================================================

void GetStatusRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetStatusRequest::GetStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_GetStatusRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.GetStatusRequest)
}
GetStatusRequest::GetStatusRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_GetStatusRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GetStatusRequest)
}
GetStatusRequest::GetStatusRequest(const GetStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.GetStatusRequest)
}

void GetStatusRequest::SharedCtor() {
}

GetStatusRequest::~GetStatusRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.GetStatusRequest)
  SharedDtor();
}

void GetStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GetStatusRequest::ArenaDtor(void* object) {
  GetStatusRequest* _this = reinterpret_cast< GetStatusRequest* >(object);
  (void)_this;
}
void GetStatusRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GetStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetStatusRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetStatusRequest& GetStatusRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_GetStatusRequest.base);
  return *internal_default_instance();
}


void GetStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GetStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.GetStatusRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.GetStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.GetStatusRequest)
  return false;
#undef DO_
}

void GetStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.GetStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.GetStatusRequest)
}

::google::protobuf::uint8* GetStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GetStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GetStatusRequest)
  return target;
}

size_t GetStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.GetStatusRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.GetStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.GetStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.GetStatusRequest)
    MergeFrom(*source);
  }
}

void GetStatusRequest::MergeFrom(const GetStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GetStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.GetStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatusRequest::CopyFrom(const GetStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GetStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusRequest::IsInitialized() const {
  return true;
}

void GetStatusRequest::Swap(GetStatusRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetStatusRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetStatusRequest::UnsafeArenaSwap(GetStatusRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetStatusRequest::InternalSwap(GetStatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetStatusRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetStatusResponse::InitAsDefaultInstance() {
}
void GetStatusResponse::clear_device_attributes() {
  device_attributes_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetStatusResponse::kDeviceAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetStatusResponse::GetStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_GetStatusResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.GetStatusResponse)
}
GetStatusResponse::GetStatusResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  device_attributes_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_GetStatusResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GetStatusResponse)
}
GetStatusResponse::GetStatusResponse(const GetStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      device_attributes_(from.device_attributes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.GetStatusResponse)
}

void GetStatusResponse::SharedCtor() {
}

GetStatusResponse::~GetStatusResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.GetStatusResponse)
  SharedDtor();
}

void GetStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GetStatusResponse::ArenaDtor(void* object) {
  GetStatusResponse* _this = reinterpret_cast< GetStatusResponse* >(object);
  (void)_this;
}
void GetStatusResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GetStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetStatusResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetStatusResponse& GetStatusResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_GetStatusResponse.base);
  return *internal_default_instance();
}


void GetStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GetStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_attributes_.Clear();
  _internal_metadata_.Clear();
}

bool GetStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.GetStatusResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.DeviceAttributes device_attributes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_device_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.GetStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.GetStatusResponse)
  return false;
#undef DO_
}

void GetStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.GetStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.DeviceAttributes device_attributes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->device_attributes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.GetStatusResponse)
}

::google::protobuf::uint8* GetStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GetStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.DeviceAttributes device_attributes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->device_attributes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GetStatusResponse)
  return target;
}

size_t GetStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.GetStatusResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.DeviceAttributes device_attributes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->device_attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->device_attributes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.GetStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.GetStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.GetStatusResponse)
    MergeFrom(*source);
  }
}

void GetStatusResponse::MergeFrom(const GetStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GetStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  device_attributes_.MergeFrom(from.device_attributes_);
}

void GetStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.GetStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatusResponse::CopyFrom(const GetStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GetStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusResponse::IsInitialized() const {
  return true;
}

void GetStatusResponse::Swap(GetStatusResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetStatusResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetStatusResponse::UnsafeArenaSwap(GetStatusResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetStatusResponse::InternalSwap(GetStatusResponse* other) {
  using std::swap;
  CastToBase(&device_attributes_)->InternalSwap(CastToBase(&other->device_attributes_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetStatusResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateWorkerSessionRequest::InitAsDefaultInstance() {
  ::tensorflow::_CreateWorkerSessionRequest_default_instance_._instance.get_mutable()->server_def_ = const_cast< ::tensorflow::ServerDef*>(
      ::tensorflow::ServerDef::internal_default_instance());
}
void CreateWorkerSessionRequest::unsafe_arena_set_allocated_server_def(
    ::tensorflow::ServerDef* server_def) {
  if (GetArenaNoVirtual() == NULL) {
    delete server_def_;
  }
  server_def_ = server_def;
  if (server_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CreateWorkerSessionRequest.server_def)
}
void CreateWorkerSessionRequest::clear_server_def() {
  if (GetArenaNoVirtual() == NULL && server_def_ != NULL) {
    delete server_def_;
  }
  server_def_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateWorkerSessionRequest::kSessionHandleFieldNumber;
const int CreateWorkerSessionRequest::kServerDefFieldNumber;
const int CreateWorkerSessionRequest::kIsolateSessionStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateWorkerSessionRequest::CreateWorkerSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CreateWorkerSessionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CreateWorkerSessionRequest)
}
CreateWorkerSessionRequest::CreateWorkerSessionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CreateWorkerSessionRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CreateWorkerSessionRequest)
}
CreateWorkerSessionRequest::CreateWorkerSessionRequest(const CreateWorkerSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_handle().size() > 0) {
    session_handle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_handle(),
      GetArenaNoVirtual());
  }
  if (from.has_server_def()) {
    server_def_ = new ::tensorflow::ServerDef(*from.server_def_);
  } else {
    server_def_ = NULL;
  }
  isolate_session_state_ = from.isolate_session_state_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.CreateWorkerSessionRequest)
}

void CreateWorkerSessionRequest::SharedCtor() {
  session_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&server_def_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isolate_session_state_) -
      reinterpret_cast<char*>(&server_def_)) + sizeof(isolate_session_state_));
}

CreateWorkerSessionRequest::~CreateWorkerSessionRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.CreateWorkerSessionRequest)
  SharedDtor();
}

void CreateWorkerSessionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  session_handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete server_def_;
}

void CreateWorkerSessionRequest::ArenaDtor(void* object) {
  CreateWorkerSessionRequest* _this = reinterpret_cast< CreateWorkerSessionRequest* >(object);
  (void)_this;
}
void CreateWorkerSessionRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CreateWorkerSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateWorkerSessionRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateWorkerSessionRequest& CreateWorkerSessionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CreateWorkerSessionRequest.base);
  return *internal_default_instance();
}


void CreateWorkerSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CreateWorkerSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_handle_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && server_def_ != NULL) {
    delete server_def_;
  }
  server_def_ = NULL;
  isolate_session_state_ = false;
  _internal_metadata_.Clear();
}

bool CreateWorkerSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CreateWorkerSessionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string session_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_handle().data(), static_cast<int>(this->session_handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CreateWorkerSessionRequest.session_handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.ServerDef server_def = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server_def()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isolate_session_state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isolate_session_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CreateWorkerSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CreateWorkerSessionRequest)
  return false;
#undef DO_
}

void CreateWorkerSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CreateWorkerSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_handle = 1;
  if (this->session_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_handle().data(), static_cast<int>(this->session_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CreateWorkerSessionRequest.session_handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session_handle(), output);
  }

  // .tensorflow.ServerDef server_def = 2;
  if (this->has_server_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_server_def(), output);
  }

  // bool isolate_session_state = 3;
  if (this->isolate_session_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isolate_session_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CreateWorkerSessionRequest)
}

::google::protobuf::uint8* CreateWorkerSessionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CreateWorkerSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_handle = 1;
  if (this->session_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_handle().data(), static_cast<int>(this->session_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CreateWorkerSessionRequest.session_handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->session_handle(), target);
  }

  // .tensorflow.ServerDef server_def = 2;
  if (this->has_server_def()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_server_def(), deterministic, target);
  }

  // bool isolate_session_state = 3;
  if (this->isolate_session_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isolate_session_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CreateWorkerSessionRequest)
  return target;
}

size_t CreateWorkerSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CreateWorkerSessionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string session_handle = 1;
  if (this->session_handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_handle());
  }

  // .tensorflow.ServerDef server_def = 2;
  if (this->has_server_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *server_def_);
  }

  // bool isolate_session_state = 3;
  if (this->isolate_session_state() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateWorkerSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CreateWorkerSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateWorkerSessionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateWorkerSessionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CreateWorkerSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CreateWorkerSessionRequest)
    MergeFrom(*source);
  }
}

void CreateWorkerSessionRequest::MergeFrom(const CreateWorkerSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CreateWorkerSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_handle().size() > 0) {
    set_session_handle(from.session_handle());
  }
  if (from.has_server_def()) {
    mutable_server_def()->::tensorflow::ServerDef::MergeFrom(from.server_def());
  }
  if (from.isolate_session_state() != 0) {
    set_isolate_session_state(from.isolate_session_state());
  }
}

void CreateWorkerSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CreateWorkerSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateWorkerSessionRequest::CopyFrom(const CreateWorkerSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CreateWorkerSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateWorkerSessionRequest::IsInitialized() const {
  return true;
}

void CreateWorkerSessionRequest::Swap(CreateWorkerSessionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CreateWorkerSessionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CreateWorkerSessionRequest::UnsafeArenaSwap(CreateWorkerSessionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CreateWorkerSessionRequest::InternalSwap(CreateWorkerSessionRequest* other) {
  using std::swap;
  session_handle_.Swap(&other->session_handle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(server_def_, other->server_def_);
  swap(isolate_session_state_, other->isolate_session_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateWorkerSessionRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateWorkerSessionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateWorkerSessionResponse::CreateWorkerSessionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CreateWorkerSessionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CreateWorkerSessionResponse)
}
CreateWorkerSessionResponse::CreateWorkerSessionResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CreateWorkerSessionResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CreateWorkerSessionResponse)
}
CreateWorkerSessionResponse::CreateWorkerSessionResponse(const CreateWorkerSessionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CreateWorkerSessionResponse)
}

void CreateWorkerSessionResponse::SharedCtor() {
}

CreateWorkerSessionResponse::~CreateWorkerSessionResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.CreateWorkerSessionResponse)
  SharedDtor();
}

void CreateWorkerSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void CreateWorkerSessionResponse::ArenaDtor(void* object) {
  CreateWorkerSessionResponse* _this = reinterpret_cast< CreateWorkerSessionResponse* >(object);
  (void)_this;
}
void CreateWorkerSessionResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CreateWorkerSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateWorkerSessionResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateWorkerSessionResponse& CreateWorkerSessionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CreateWorkerSessionResponse.base);
  return *internal_default_instance();
}


void CreateWorkerSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CreateWorkerSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CreateWorkerSessionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CreateWorkerSessionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CreateWorkerSessionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CreateWorkerSessionResponse)
  return false;
#undef DO_
}

void CreateWorkerSessionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CreateWorkerSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CreateWorkerSessionResponse)
}

::google::protobuf::uint8* CreateWorkerSessionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CreateWorkerSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CreateWorkerSessionResponse)
  return target;
}

size_t CreateWorkerSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CreateWorkerSessionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateWorkerSessionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CreateWorkerSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateWorkerSessionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateWorkerSessionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CreateWorkerSessionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CreateWorkerSessionResponse)
    MergeFrom(*source);
  }
}

void CreateWorkerSessionResponse::MergeFrom(const CreateWorkerSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CreateWorkerSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateWorkerSessionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CreateWorkerSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateWorkerSessionResponse::CopyFrom(const CreateWorkerSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CreateWorkerSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateWorkerSessionResponse::IsInitialized() const {
  return true;
}

void CreateWorkerSessionResponse::Swap(CreateWorkerSessionResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CreateWorkerSessionResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CreateWorkerSessionResponse::UnsafeArenaSwap(CreateWorkerSessionResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CreateWorkerSessionResponse::InternalSwap(CreateWorkerSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateWorkerSessionResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteWorkerSessionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteWorkerSessionRequest::kSessionHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteWorkerSessionRequest::DeleteWorkerSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_DeleteWorkerSessionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.DeleteWorkerSessionRequest)
}
DeleteWorkerSessionRequest::DeleteWorkerSessionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_DeleteWorkerSessionRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DeleteWorkerSessionRequest)
}
DeleteWorkerSessionRequest::DeleteWorkerSessionRequest(const DeleteWorkerSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_handle().size() > 0) {
    session_handle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_handle(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.DeleteWorkerSessionRequest)
}

void DeleteWorkerSessionRequest::SharedCtor() {
  session_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteWorkerSessionRequest::~DeleteWorkerSessionRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.DeleteWorkerSessionRequest)
  SharedDtor();
}

void DeleteWorkerSessionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  session_handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteWorkerSessionRequest::ArenaDtor(void* object) {
  DeleteWorkerSessionRequest* _this = reinterpret_cast< DeleteWorkerSessionRequest* >(object);
  (void)_this;
}
void DeleteWorkerSessionRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeleteWorkerSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteWorkerSessionRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteWorkerSessionRequest& DeleteWorkerSessionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_DeleteWorkerSessionRequest.base);
  return *internal_default_instance();
}


void DeleteWorkerSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DeleteWorkerSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_handle_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool DeleteWorkerSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.DeleteWorkerSessionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string session_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_handle().data(), static_cast<int>(this->session_handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.DeleteWorkerSessionRequest.session_handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.DeleteWorkerSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.DeleteWorkerSessionRequest)
  return false;
#undef DO_
}

void DeleteWorkerSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.DeleteWorkerSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_handle = 1;
  if (this->session_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_handle().data(), static_cast<int>(this->session_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DeleteWorkerSessionRequest.session_handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session_handle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.DeleteWorkerSessionRequest)
}

::google::protobuf::uint8* DeleteWorkerSessionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DeleteWorkerSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_handle = 1;
  if (this->session_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_handle().data(), static_cast<int>(this->session_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DeleteWorkerSessionRequest.session_handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->session_handle(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DeleteWorkerSessionRequest)
  return target;
}

size_t DeleteWorkerSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.DeleteWorkerSessionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string session_handle = 1;
  if (this->session_handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteWorkerSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.DeleteWorkerSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteWorkerSessionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteWorkerSessionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.DeleteWorkerSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.DeleteWorkerSessionRequest)
    MergeFrom(*source);
  }
}

void DeleteWorkerSessionRequest::MergeFrom(const DeleteWorkerSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DeleteWorkerSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_handle().size() > 0) {
    set_session_handle(from.session_handle());
  }
}

void DeleteWorkerSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.DeleteWorkerSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteWorkerSessionRequest::CopyFrom(const DeleteWorkerSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DeleteWorkerSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteWorkerSessionRequest::IsInitialized() const {
  return true;
}

void DeleteWorkerSessionRequest::Swap(DeleteWorkerSessionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeleteWorkerSessionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeleteWorkerSessionRequest::UnsafeArenaSwap(DeleteWorkerSessionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeleteWorkerSessionRequest::InternalSwap(DeleteWorkerSessionRequest* other) {
  using std::swap;
  session_handle_.Swap(&other->session_handle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteWorkerSessionRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteWorkerSessionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteWorkerSessionResponse::DeleteWorkerSessionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_DeleteWorkerSessionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.DeleteWorkerSessionResponse)
}
DeleteWorkerSessionResponse::DeleteWorkerSessionResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_DeleteWorkerSessionResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DeleteWorkerSessionResponse)
}
DeleteWorkerSessionResponse::DeleteWorkerSessionResponse(const DeleteWorkerSessionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.DeleteWorkerSessionResponse)
}

void DeleteWorkerSessionResponse::SharedCtor() {
}

DeleteWorkerSessionResponse::~DeleteWorkerSessionResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.DeleteWorkerSessionResponse)
  SharedDtor();
}

void DeleteWorkerSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DeleteWorkerSessionResponse::ArenaDtor(void* object) {
  DeleteWorkerSessionResponse* _this = reinterpret_cast< DeleteWorkerSessionResponse* >(object);
  (void)_this;
}
void DeleteWorkerSessionResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeleteWorkerSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteWorkerSessionResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteWorkerSessionResponse& DeleteWorkerSessionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_DeleteWorkerSessionResponse.base);
  return *internal_default_instance();
}


void DeleteWorkerSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DeleteWorkerSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DeleteWorkerSessionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.DeleteWorkerSessionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.DeleteWorkerSessionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.DeleteWorkerSessionResponse)
  return false;
#undef DO_
}

void DeleteWorkerSessionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.DeleteWorkerSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.DeleteWorkerSessionResponse)
}

::google::protobuf::uint8* DeleteWorkerSessionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DeleteWorkerSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DeleteWorkerSessionResponse)
  return target;
}

size_t DeleteWorkerSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.DeleteWorkerSessionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteWorkerSessionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.DeleteWorkerSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteWorkerSessionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteWorkerSessionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.DeleteWorkerSessionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.DeleteWorkerSessionResponse)
    MergeFrom(*source);
  }
}

void DeleteWorkerSessionResponse::MergeFrom(const DeleteWorkerSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DeleteWorkerSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteWorkerSessionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.DeleteWorkerSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteWorkerSessionResponse::CopyFrom(const DeleteWorkerSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DeleteWorkerSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteWorkerSessionResponse::IsInitialized() const {
  return true;
}

void DeleteWorkerSessionResponse::Swap(DeleteWorkerSessionResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeleteWorkerSessionResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeleteWorkerSessionResponse::UnsafeArenaSwap(DeleteWorkerSessionResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeleteWorkerSessionResponse::InternalSwap(DeleteWorkerSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteWorkerSessionResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterGraphRequest::InitAsDefaultInstance() {
  ::tensorflow::_RegisterGraphRequest_default_instance_._instance.get_mutable()->graph_def_ = const_cast< ::tensorflow::GraphDef*>(
      ::tensorflow::GraphDef::internal_default_instance());
  ::tensorflow::_RegisterGraphRequest_default_instance_._instance.get_mutable()->graph_options_ = const_cast< ::tensorflow::GraphOptions*>(
      ::tensorflow::GraphOptions::internal_default_instance());
  ::tensorflow::_RegisterGraphRequest_default_instance_._instance.get_mutable()->debug_options_ = const_cast< ::tensorflow::DebugOptions*>(
      ::tensorflow::DebugOptions::internal_default_instance());
}
void RegisterGraphRequest::unsafe_arena_set_allocated_graph_def(
    ::tensorflow::GraphDef* graph_def) {
  if (GetArenaNoVirtual() == NULL) {
    delete graph_def_;
  }
  graph_def_ = graph_def;
  if (graph_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RegisterGraphRequest.graph_def)
}
void RegisterGraphRequest::clear_graph_def() {
  if (GetArenaNoVirtual() == NULL && graph_def_ != NULL) {
    delete graph_def_;
  }
  graph_def_ = NULL;
}
void RegisterGraphRequest::unsafe_arena_set_allocated_graph_options(
    ::tensorflow::GraphOptions* graph_options) {
  if (GetArenaNoVirtual() == NULL) {
    delete graph_options_;
  }
  graph_options_ = graph_options;
  if (graph_options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RegisterGraphRequest.graph_options)
}
void RegisterGraphRequest::clear_graph_options() {
  if (GetArenaNoVirtual() == NULL && graph_options_ != NULL) {
    delete graph_options_;
  }
  graph_options_ = NULL;
}
void RegisterGraphRequest::unsafe_arena_set_allocated_debug_options(
    ::tensorflow::DebugOptions* debug_options) {
  if (GetArenaNoVirtual() == NULL) {
    delete debug_options_;
  }
  debug_options_ = debug_options;
  if (debug_options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RegisterGraphRequest.debug_options)
}
void RegisterGraphRequest::clear_debug_options() {
  if (GetArenaNoVirtual() == NULL && debug_options_ != NULL) {
    delete debug_options_;
  }
  debug_options_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterGraphRequest::kSessionHandleFieldNumber;
const int RegisterGraphRequest::kCreateWorkerSessionCalledFieldNumber;
const int RegisterGraphRequest::kGraphDefFieldNumber;
const int RegisterGraphRequest::kHasControlFlowFieldNumber;
const int RegisterGraphRequest::kGraphOptionsFieldNumber;
const int RegisterGraphRequest::kDebugOptionsFieldNumber;
const int RegisterGraphRequest::kCollectiveGraphKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterGraphRequest::RegisterGraphRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RegisterGraphRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.RegisterGraphRequest)
}
RegisterGraphRequest::RegisterGraphRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RegisterGraphRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.RegisterGraphRequest)
}
RegisterGraphRequest::RegisterGraphRequest(const RegisterGraphRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_handle().size() > 0) {
    session_handle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_handle(),
      GetArenaNoVirtual());
  }
  if (from.has_graph_def()) {
    graph_def_ = new ::tensorflow::GraphDef(*from.graph_def_);
  } else {
    graph_def_ = NULL;
  }
  if (from.has_graph_options()) {
    graph_options_ = new ::tensorflow::GraphOptions(*from.graph_options_);
  } else {
    graph_options_ = NULL;
  }
  if (from.has_debug_options()) {
    debug_options_ = new ::tensorflow::DebugOptions(*from.debug_options_);
  } else {
    debug_options_ = NULL;
  }
  ::memcpy(&collective_graph_key_, &from.collective_graph_key_,
    static_cast<size_t>(reinterpret_cast<char*>(&has_control_flow_) -
    reinterpret_cast<char*>(&collective_graph_key_)) + sizeof(has_control_flow_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.RegisterGraphRequest)
}

void RegisterGraphRequest::SharedCtor() {
  session_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&graph_def_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&has_control_flow_) -
      reinterpret_cast<char*>(&graph_def_)) + sizeof(has_control_flow_));
}

RegisterGraphRequest::~RegisterGraphRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.RegisterGraphRequest)
  SharedDtor();
}

void RegisterGraphRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  session_handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete graph_def_;
  if (this != internal_default_instance()) delete graph_options_;
  if (this != internal_default_instance()) delete debug_options_;
}

void RegisterGraphRequest::ArenaDtor(void* object) {
  RegisterGraphRequest* _this = reinterpret_cast< RegisterGraphRequest* >(object);
  (void)_this;
}
void RegisterGraphRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RegisterGraphRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisterGraphRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterGraphRequest& RegisterGraphRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RegisterGraphRequest.base);
  return *internal_default_instance();
}


void RegisterGraphRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.RegisterGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_handle_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && graph_def_ != NULL) {
    delete graph_def_;
  }
  graph_def_ = NULL;
  if (GetArenaNoVirtual() == NULL && graph_options_ != NULL) {
    delete graph_options_;
  }
  graph_options_ = NULL;
  if (GetArenaNoVirtual() == NULL && debug_options_ != NULL) {
    delete debug_options_;
  }
  debug_options_ = NULL;
  ::memset(&collective_graph_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&has_control_flow_) -
      reinterpret_cast<char*>(&collective_graph_key_)) + sizeof(has_control_flow_));
  _internal_metadata_.Clear();
}

bool RegisterGraphRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.RegisterGraphRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string session_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_handle().data(), static_cast<int>(this->session_handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.RegisterGraphRequest.session_handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.GraphDef graph_def = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_graph_def()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool has_control_flow = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_control_flow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.GraphOptions graph_options = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_graph_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.DebugOptions debug_options = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_debug_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool create_worker_session_called = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &create_worker_session_called_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 collective_graph_key = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &collective_graph_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.RegisterGraphRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.RegisterGraphRequest)
  return false;
#undef DO_
}

void RegisterGraphRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.RegisterGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_handle = 1;
  if (this->session_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_handle().data(), static_cast<int>(this->session_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RegisterGraphRequest.session_handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session_handle(), output);
  }

  // .tensorflow.GraphDef graph_def = 2;
  if (this->has_graph_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_graph_def(), output);
  }

  // bool has_control_flow = 3 [deprecated = true];
  if (this->has_control_flow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->has_control_flow(), output);
  }

  // .tensorflow.GraphOptions graph_options = 4;
  if (this->has_graph_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_graph_options(), output);
  }

  // .tensorflow.DebugOptions debug_options = 5;
  if (this->has_debug_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_debug_options(), output);
  }

  // bool create_worker_session_called = 6;
  if (this->create_worker_session_called() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->create_worker_session_called(), output);
  }

  // int64 collective_graph_key = 7;
  if (this->collective_graph_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->collective_graph_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.RegisterGraphRequest)
}

::google::protobuf::uint8* RegisterGraphRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.RegisterGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_handle = 1;
  if (this->session_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_handle().data(), static_cast<int>(this->session_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RegisterGraphRequest.session_handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->session_handle(), target);
  }

  // .tensorflow.GraphDef graph_def = 2;
  if (this->has_graph_def()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_graph_def(), deterministic, target);
  }

  // bool has_control_flow = 3 [deprecated = true];
  if (this->has_control_flow() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->has_control_flow(), target);
  }

  // .tensorflow.GraphOptions graph_options = 4;
  if (this->has_graph_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_graph_options(), deterministic, target);
  }

  // .tensorflow.DebugOptions debug_options = 5;
  if (this->has_debug_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_debug_options(), deterministic, target);
  }

  // bool create_worker_session_called = 6;
  if (this->create_worker_session_called() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->create_worker_session_called(), target);
  }

  // int64 collective_graph_key = 7;
  if (this->collective_graph_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->collective_graph_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.RegisterGraphRequest)
  return target;
}

size_t RegisterGraphRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.RegisterGraphRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string session_handle = 1;
  if (this->session_handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_handle());
  }

  // .tensorflow.GraphDef graph_def = 2;
  if (this->has_graph_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *graph_def_);
  }

  // .tensorflow.GraphOptions graph_options = 4;
  if (this->has_graph_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *graph_options_);
  }

  // .tensorflow.DebugOptions debug_options = 5;
  if (this->has_debug_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *debug_options_);
  }

  // int64 collective_graph_key = 7;
  if (this->collective_graph_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->collective_graph_key());
  }

  // bool create_worker_session_called = 6;
  if (this->create_worker_session_called() != 0) {
    total_size += 1 + 1;
  }

  // bool has_control_flow = 3 [deprecated = true];
  if (this->has_control_flow() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterGraphRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.RegisterGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterGraphRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterGraphRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.RegisterGraphRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.RegisterGraphRequest)
    MergeFrom(*source);
  }
}

void RegisterGraphRequest::MergeFrom(const RegisterGraphRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.RegisterGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_handle().size() > 0) {
    set_session_handle(from.session_handle());
  }
  if (from.has_graph_def()) {
    mutable_graph_def()->::tensorflow::GraphDef::MergeFrom(from.graph_def());
  }
  if (from.has_graph_options()) {
    mutable_graph_options()->::tensorflow::GraphOptions::MergeFrom(from.graph_options());
  }
  if (from.has_debug_options()) {
    mutable_debug_options()->::tensorflow::DebugOptions::MergeFrom(from.debug_options());
  }
  if (from.collective_graph_key() != 0) {
    set_collective_graph_key(from.collective_graph_key());
  }
  if (from.create_worker_session_called() != 0) {
    set_create_worker_session_called(from.create_worker_session_called());
  }
  if (from.has_control_flow() != 0) {
    set_has_control_flow(from.has_control_flow());
  }
}

void RegisterGraphRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.RegisterGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterGraphRequest::CopyFrom(const RegisterGraphRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.RegisterGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterGraphRequest::IsInitialized() const {
  return true;
}

void RegisterGraphRequest::Swap(RegisterGraphRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RegisterGraphRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RegisterGraphRequest::UnsafeArenaSwap(RegisterGraphRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RegisterGraphRequest::InternalSwap(RegisterGraphRequest* other) {
  using std::swap;
  session_handle_.Swap(&other->session_handle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(graph_def_, other->graph_def_);
  swap(graph_options_, other->graph_options_);
  swap(debug_options_, other->debug_options_);
  swap(collective_graph_key_, other->collective_graph_key_);
  swap(create_worker_session_called_, other->create_worker_session_called_);
  swap(has_control_flow_, other->has_control_flow_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisterGraphRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterGraphResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterGraphResponse::kGraphHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterGraphResponse::RegisterGraphResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RegisterGraphResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.RegisterGraphResponse)
}
RegisterGraphResponse::RegisterGraphResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RegisterGraphResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.RegisterGraphResponse)
}
RegisterGraphResponse::RegisterGraphResponse(const RegisterGraphResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  graph_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.graph_handle().size() > 0) {
    graph_handle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.graph_handle(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.RegisterGraphResponse)
}

void RegisterGraphResponse::SharedCtor() {
  graph_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RegisterGraphResponse::~RegisterGraphResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.RegisterGraphResponse)
  SharedDtor();
}

void RegisterGraphResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  graph_handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterGraphResponse::ArenaDtor(void* object) {
  RegisterGraphResponse* _this = reinterpret_cast< RegisterGraphResponse* >(object);
  (void)_this;
}
void RegisterGraphResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RegisterGraphResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisterGraphResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterGraphResponse& RegisterGraphResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RegisterGraphResponse.base);
  return *internal_default_instance();
}


void RegisterGraphResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.RegisterGraphResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  graph_handle_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool RegisterGraphResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.RegisterGraphResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string graph_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_graph_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->graph_handle().data(), static_cast<int>(this->graph_handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.RegisterGraphResponse.graph_handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.RegisterGraphResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.RegisterGraphResponse)
  return false;
#undef DO_
}

void RegisterGraphResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.RegisterGraphResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string graph_handle = 1;
  if (this->graph_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_handle().data(), static_cast<int>(this->graph_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RegisterGraphResponse.graph_handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->graph_handle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.RegisterGraphResponse)
}

::google::protobuf::uint8* RegisterGraphResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.RegisterGraphResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string graph_handle = 1;
  if (this->graph_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_handle().data(), static_cast<int>(this->graph_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RegisterGraphResponse.graph_handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->graph_handle(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.RegisterGraphResponse)
  return target;
}

size_t RegisterGraphResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.RegisterGraphResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string graph_handle = 1;
  if (this->graph_handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->graph_handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterGraphResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.RegisterGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterGraphResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterGraphResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.RegisterGraphResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.RegisterGraphResponse)
    MergeFrom(*source);
  }
}

void RegisterGraphResponse::MergeFrom(const RegisterGraphResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.RegisterGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.graph_handle().size() > 0) {
    set_graph_handle(from.graph_handle());
  }
}

void RegisterGraphResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.RegisterGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterGraphResponse::CopyFrom(const RegisterGraphResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.RegisterGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterGraphResponse::IsInitialized() const {
  return true;
}

void RegisterGraphResponse::Swap(RegisterGraphResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RegisterGraphResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RegisterGraphResponse::UnsafeArenaSwap(RegisterGraphResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RegisterGraphResponse::InternalSwap(RegisterGraphResponse* other) {
  using std::swap;
  graph_handle_.Swap(&other->graph_handle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisterGraphResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeregisterGraphRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeregisterGraphRequest::kSessionHandleFieldNumber;
const int DeregisterGraphRequest::kCreateWorkerSessionCalledFieldNumber;
const int DeregisterGraphRequest::kGraphHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeregisterGraphRequest::DeregisterGraphRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_DeregisterGraphRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.DeregisterGraphRequest)
}
DeregisterGraphRequest::DeregisterGraphRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_DeregisterGraphRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DeregisterGraphRequest)
}
DeregisterGraphRequest::DeregisterGraphRequest(const DeregisterGraphRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  graph_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.graph_handle().size() > 0) {
    graph_handle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.graph_handle(),
      GetArenaNoVirtual());
  }
  session_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_handle().size() > 0) {
    session_handle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_handle(),
      GetArenaNoVirtual());
  }
  create_worker_session_called_ = from.create_worker_session_called_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.DeregisterGraphRequest)
}

void DeregisterGraphRequest::SharedCtor() {
  graph_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_worker_session_called_ = false;
}

DeregisterGraphRequest::~DeregisterGraphRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.DeregisterGraphRequest)
  SharedDtor();
}

void DeregisterGraphRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  graph_handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeregisterGraphRequest::ArenaDtor(void* object) {
  DeregisterGraphRequest* _this = reinterpret_cast< DeregisterGraphRequest* >(object);
  (void)_this;
}
void DeregisterGraphRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeregisterGraphRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeregisterGraphRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeregisterGraphRequest& DeregisterGraphRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_DeregisterGraphRequest.base);
  return *internal_default_instance();
}


void DeregisterGraphRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DeregisterGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  graph_handle_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  session_handle_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  create_worker_session_called_ = false;
  _internal_metadata_.Clear();
}

bool DeregisterGraphRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.DeregisterGraphRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string graph_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_graph_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->graph_handle().data(), static_cast<int>(this->graph_handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.DeregisterGraphRequest.graph_handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string session_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_handle().data(), static_cast<int>(this->session_handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.DeregisterGraphRequest.session_handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool create_worker_session_called = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &create_worker_session_called_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.DeregisterGraphRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.DeregisterGraphRequest)
  return false;
#undef DO_
}

void DeregisterGraphRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.DeregisterGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string graph_handle = 1;
  if (this->graph_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_handle().data(), static_cast<int>(this->graph_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DeregisterGraphRequest.graph_handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->graph_handle(), output);
  }

  // string session_handle = 2;
  if (this->session_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_handle().data(), static_cast<int>(this->session_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DeregisterGraphRequest.session_handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->session_handle(), output);
  }

  // bool create_worker_session_called = 3;
  if (this->create_worker_session_called() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->create_worker_session_called(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.DeregisterGraphRequest)
}

::google::protobuf::uint8* DeregisterGraphRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DeregisterGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string graph_handle = 1;
  if (this->graph_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_handle().data(), static_cast<int>(this->graph_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DeregisterGraphRequest.graph_handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->graph_handle(), target);
  }

  // string session_handle = 2;
  if (this->session_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_handle().data(), static_cast<int>(this->session_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.DeregisterGraphRequest.session_handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->session_handle(), target);
  }

  // bool create_worker_session_called = 3;
  if (this->create_worker_session_called() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->create_worker_session_called(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DeregisterGraphRequest)
  return target;
}

size_t DeregisterGraphRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.DeregisterGraphRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string graph_handle = 1;
  if (this->graph_handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->graph_handle());
  }

  // string session_handle = 2;
  if (this->session_handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_handle());
  }

  // bool create_worker_session_called = 3;
  if (this->create_worker_session_called() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeregisterGraphRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.DeregisterGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeregisterGraphRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeregisterGraphRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.DeregisterGraphRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.DeregisterGraphRequest)
    MergeFrom(*source);
  }
}

void DeregisterGraphRequest::MergeFrom(const DeregisterGraphRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DeregisterGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.graph_handle().size() > 0) {
    set_graph_handle(from.graph_handle());
  }
  if (from.session_handle().size() > 0) {
    set_session_handle(from.session_handle());
  }
  if (from.create_worker_session_called() != 0) {
    set_create_worker_session_called(from.create_worker_session_called());
  }
}

void DeregisterGraphRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.DeregisterGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeregisterGraphRequest::CopyFrom(const DeregisterGraphRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DeregisterGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeregisterGraphRequest::IsInitialized() const {
  return true;
}

void DeregisterGraphRequest::Swap(DeregisterGraphRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeregisterGraphRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeregisterGraphRequest::UnsafeArenaSwap(DeregisterGraphRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeregisterGraphRequest::InternalSwap(DeregisterGraphRequest* other) {
  using std::swap;
  graph_handle_.Swap(&other->graph_handle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  session_handle_.Swap(&other->session_handle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_worker_session_called_, other->create_worker_session_called_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeregisterGraphRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeregisterGraphResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeregisterGraphResponse::DeregisterGraphResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_DeregisterGraphResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.DeregisterGraphResponse)
}
DeregisterGraphResponse::DeregisterGraphResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_DeregisterGraphResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DeregisterGraphResponse)
}
DeregisterGraphResponse::DeregisterGraphResponse(const DeregisterGraphResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.DeregisterGraphResponse)
}

void DeregisterGraphResponse::SharedCtor() {
}

DeregisterGraphResponse::~DeregisterGraphResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.DeregisterGraphResponse)
  SharedDtor();
}

void DeregisterGraphResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DeregisterGraphResponse::ArenaDtor(void* object) {
  DeregisterGraphResponse* _this = reinterpret_cast< DeregisterGraphResponse* >(object);
  (void)_this;
}
void DeregisterGraphResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeregisterGraphResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeregisterGraphResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeregisterGraphResponse& DeregisterGraphResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_DeregisterGraphResponse.base);
  return *internal_default_instance();
}


void DeregisterGraphResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DeregisterGraphResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DeregisterGraphResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.DeregisterGraphResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.DeregisterGraphResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.DeregisterGraphResponse)
  return false;
#undef DO_
}

void DeregisterGraphResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.DeregisterGraphResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.DeregisterGraphResponse)
}

::google::protobuf::uint8* DeregisterGraphResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DeregisterGraphResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DeregisterGraphResponse)
  return target;
}

size_t DeregisterGraphResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.DeregisterGraphResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeregisterGraphResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.DeregisterGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeregisterGraphResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeregisterGraphResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.DeregisterGraphResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.DeregisterGraphResponse)
    MergeFrom(*source);
  }
}

void DeregisterGraphResponse::MergeFrom(const DeregisterGraphResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DeregisterGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeregisterGraphResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.DeregisterGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeregisterGraphResponse::CopyFrom(const DeregisterGraphResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DeregisterGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeregisterGraphResponse::IsInitialized() const {
  return true;
}

void DeregisterGraphResponse::Swap(DeregisterGraphResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeregisterGraphResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeregisterGraphResponse::UnsafeArenaSwap(DeregisterGraphResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeregisterGraphResponse::InternalSwap(DeregisterGraphResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeregisterGraphResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CleanupAllRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CleanupAllRequest::kContainerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CleanupAllRequest::CleanupAllRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CleanupAllRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CleanupAllRequest)
}
CleanupAllRequest::CleanupAllRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  container_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CleanupAllRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CleanupAllRequest)
}
CleanupAllRequest::CleanupAllRequest(const CleanupAllRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      container_(from.container_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CleanupAllRequest)
}

void CleanupAllRequest::SharedCtor() {
}

CleanupAllRequest::~CleanupAllRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.CleanupAllRequest)
  SharedDtor();
}

void CleanupAllRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void CleanupAllRequest::ArenaDtor(void* object) {
  CleanupAllRequest* _this = reinterpret_cast< CleanupAllRequest* >(object);
  (void)_this;
}
void CleanupAllRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CleanupAllRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CleanupAllRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CleanupAllRequest& CleanupAllRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CleanupAllRequest.base);
  return *internal_default_instance();
}


void CleanupAllRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CleanupAllRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  container_.Clear();
  _internal_metadata_.Clear();
}

bool CleanupAllRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CleanupAllRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string container = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_container()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->container(this->container_size() - 1).data(),
            static_cast<int>(this->container(this->container_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CleanupAllRequest.container"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CleanupAllRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CleanupAllRequest)
  return false;
#undef DO_
}

void CleanupAllRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CleanupAllRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string container = 1;
  for (int i = 0, n = this->container_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container(i).data(), static_cast<int>(this->container(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CleanupAllRequest.container");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->container(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CleanupAllRequest)
}

::google::protobuf::uint8* CleanupAllRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CleanupAllRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string container = 1;
  for (int i = 0, n = this->container_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container(i).data(), static_cast<int>(this->container(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CleanupAllRequest.container");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->container(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CleanupAllRequest)
  return target;
}

size_t CleanupAllRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CleanupAllRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string container = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->container_size());
  for (int i = 0, n = this->container_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->container(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CleanupAllRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CleanupAllRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CleanupAllRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CleanupAllRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CleanupAllRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CleanupAllRequest)
    MergeFrom(*source);
  }
}

void CleanupAllRequest::MergeFrom(const CleanupAllRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CleanupAllRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  container_.MergeFrom(from.container_);
}

void CleanupAllRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CleanupAllRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CleanupAllRequest::CopyFrom(const CleanupAllRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CleanupAllRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CleanupAllRequest::IsInitialized() const {
  return true;
}

void CleanupAllRequest::Swap(CleanupAllRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CleanupAllRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CleanupAllRequest::UnsafeArenaSwap(CleanupAllRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CleanupAllRequest::InternalSwap(CleanupAllRequest* other) {
  using std::swap;
  container_.InternalSwap(CastToBase(&other->container_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CleanupAllRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CleanupAllResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CleanupAllResponse::CleanupAllResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CleanupAllResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CleanupAllResponse)
}
CleanupAllResponse::CleanupAllResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CleanupAllResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CleanupAllResponse)
}
CleanupAllResponse::CleanupAllResponse(const CleanupAllResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CleanupAllResponse)
}

void CleanupAllResponse::SharedCtor() {
}

CleanupAllResponse::~CleanupAllResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.CleanupAllResponse)
  SharedDtor();
}

void CleanupAllResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void CleanupAllResponse::ArenaDtor(void* object) {
  CleanupAllResponse* _this = reinterpret_cast< CleanupAllResponse* >(object);
  (void)_this;
}
void CleanupAllResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CleanupAllResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CleanupAllResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CleanupAllResponse& CleanupAllResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CleanupAllResponse.base);
  return *internal_default_instance();
}


void CleanupAllResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CleanupAllResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CleanupAllResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CleanupAllResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CleanupAllResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CleanupAllResponse)
  return false;
#undef DO_
}

void CleanupAllResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CleanupAllResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CleanupAllResponse)
}

::google::protobuf::uint8* CleanupAllResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CleanupAllResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CleanupAllResponse)
  return target;
}

size_t CleanupAllResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CleanupAllResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CleanupAllResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CleanupAllResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CleanupAllResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CleanupAllResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CleanupAllResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CleanupAllResponse)
    MergeFrom(*source);
  }
}

void CleanupAllResponse::MergeFrom(const CleanupAllResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CleanupAllResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CleanupAllResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CleanupAllResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CleanupAllResponse::CopyFrom(const CleanupAllResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CleanupAllResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CleanupAllResponse::IsInitialized() const {
  return true;
}

void CleanupAllResponse::Swap(CleanupAllResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CleanupAllResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CleanupAllResponse::UnsafeArenaSwap(CleanupAllResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CleanupAllResponse::InternalSwap(CleanupAllResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CleanupAllResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecutorOpts::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecutorOpts::kRecordCostsFieldNumber;
const int ExecutorOpts::kRecordTimelineFieldNumber;
const int ExecutorOpts::kRecordPartitionGraphsFieldNumber;
const int ExecutorOpts::kReportTensorAllocationsUponOomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutorOpts::ExecutorOpts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_ExecutorOpts.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ExecutorOpts)
}
ExecutorOpts::ExecutorOpts(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_ExecutorOpts.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ExecutorOpts)
}
ExecutorOpts::ExecutorOpts(const ExecutorOpts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&record_costs_, &from.record_costs_,
    static_cast<size_t>(reinterpret_cast<char*>(&report_tensor_allocations_upon_oom_) -
    reinterpret_cast<char*>(&record_costs_)) + sizeof(report_tensor_allocations_upon_oom_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.ExecutorOpts)
}

void ExecutorOpts::SharedCtor() {
  ::memset(&record_costs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&report_tensor_allocations_upon_oom_) -
      reinterpret_cast<char*>(&record_costs_)) + sizeof(report_tensor_allocations_upon_oom_));
}

ExecutorOpts::~ExecutorOpts() {
  // @@protoc_insertion_point(destructor:tensorflow.ExecutorOpts)
  SharedDtor();
}

void ExecutorOpts::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ExecutorOpts::ArenaDtor(void* object) {
  ExecutorOpts* _this = reinterpret_cast< ExecutorOpts* >(object);
  (void)_this;
}
void ExecutorOpts::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ExecutorOpts::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecutorOpts::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecutorOpts& ExecutorOpts::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_ExecutorOpts.base);
  return *internal_default_instance();
}


void ExecutorOpts::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ExecutorOpts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&record_costs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&report_tensor_allocations_upon_oom_) -
      reinterpret_cast<char*>(&record_costs_)) + sizeof(report_tensor_allocations_upon_oom_));
  _internal_metadata_.Clear();
}

bool ExecutorOpts::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ExecutorOpts)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool record_costs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &record_costs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool record_timeline = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &record_timeline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool record_partition_graphs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &record_partition_graphs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool report_tensor_allocations_upon_oom = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &report_tensor_allocations_upon_oom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ExecutorOpts)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ExecutorOpts)
  return false;
#undef DO_
}

void ExecutorOpts::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ExecutorOpts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool record_costs = 1;
  if (this->record_costs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->record_costs(), output);
  }

  // bool record_timeline = 3;
  if (this->record_timeline() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->record_timeline(), output);
  }

  // bool record_partition_graphs = 4;
  if (this->record_partition_graphs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->record_partition_graphs(), output);
  }

  // bool report_tensor_allocations_upon_oom = 5;
  if (this->report_tensor_allocations_upon_oom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->report_tensor_allocations_upon_oom(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.ExecutorOpts)
}

::google::protobuf::uint8* ExecutorOpts::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ExecutorOpts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool record_costs = 1;
  if (this->record_costs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->record_costs(), target);
  }

  // bool record_timeline = 3;
  if (this->record_timeline() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->record_timeline(), target);
  }

  // bool record_partition_graphs = 4;
  if (this->record_partition_graphs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->record_partition_graphs(), target);
  }

  // bool report_tensor_allocations_upon_oom = 5;
  if (this->report_tensor_allocations_upon_oom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->report_tensor_allocations_upon_oom(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ExecutorOpts)
  return target;
}

size_t ExecutorOpts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ExecutorOpts)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool record_costs = 1;
  if (this->record_costs() != 0) {
    total_size += 1 + 1;
  }

  // bool record_timeline = 3;
  if (this->record_timeline() != 0) {
    total_size += 1 + 1;
  }

  // bool record_partition_graphs = 4;
  if (this->record_partition_graphs() != 0) {
    total_size += 1 + 1;
  }

  // bool report_tensor_allocations_upon_oom = 5;
  if (this->report_tensor_allocations_upon_oom() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecutorOpts::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ExecutorOpts)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutorOpts* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecutorOpts>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ExecutorOpts)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ExecutorOpts)
    MergeFrom(*source);
  }
}

void ExecutorOpts::MergeFrom(const ExecutorOpts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ExecutorOpts)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.record_costs() != 0) {
    set_record_costs(from.record_costs());
  }
  if (from.record_timeline() != 0) {
    set_record_timeline(from.record_timeline());
  }
  if (from.record_partition_graphs() != 0) {
    set_record_partition_graphs(from.record_partition_graphs());
  }
  if (from.report_tensor_allocations_upon_oom() != 0) {
    set_report_tensor_allocations_upon_oom(from.report_tensor_allocations_upon_oom());
  }
}

void ExecutorOpts::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ExecutorOpts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutorOpts::CopyFrom(const ExecutorOpts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ExecutorOpts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutorOpts::IsInitialized() const {
  return true;
}

void ExecutorOpts::Swap(ExecutorOpts* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ExecutorOpts* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ExecutorOpts::UnsafeArenaSwap(ExecutorOpts* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ExecutorOpts::InternalSwap(ExecutorOpts* other) {
  using std::swap;
  swap(record_costs_, other->record_costs_);
  swap(record_timeline_, other->record_timeline_);
  swap(record_partition_graphs_, other->record_partition_graphs_);
  swap(report_tensor_allocations_upon_oom_, other->report_tensor_allocations_upon_oom_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecutorOpts::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RunGraphRequest::InitAsDefaultInstance() {
  ::tensorflow::_RunGraphRequest_default_instance_._instance.get_mutable()->exec_opts_ = const_cast< ::tensorflow::ExecutorOpts*>(
      ::tensorflow::ExecutorOpts::internal_default_instance());
}
void RunGraphRequest::unsafe_arena_set_allocated_exec_opts(
    ::tensorflow::ExecutorOpts* exec_opts) {
  if (GetArenaNoVirtual() == NULL) {
    delete exec_opts_;
  }
  exec_opts_ = exec_opts;
  if (exec_opts) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RunGraphRequest.exec_opts)
}
void RunGraphRequest::clear_send() {
  send_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunGraphRequest::kSessionHandleFieldNumber;
const int RunGraphRequest::kCreateWorkerSessionCalledFieldNumber;
const int RunGraphRequest::kGraphHandleFieldNumber;
const int RunGraphRequest::kStepIdFieldNumber;
const int RunGraphRequest::kExecOptsFieldNumber;
const int RunGraphRequest::kSendFieldNumber;
const int RunGraphRequest::kRecvKeyFieldNumber;
const int RunGraphRequest::kIsPartialFieldNumber;
const int RunGraphRequest::kIsLastPartialRunFieldNumber;
const int RunGraphRequest::kStoreErrorsInResponseBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunGraphRequest::RunGraphRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RunGraphRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.RunGraphRequest)
}
RunGraphRequest::RunGraphRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  send_(arena),
  recv_key_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RunGraphRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.RunGraphRequest)
}
RunGraphRequest::RunGraphRequest(const RunGraphRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      send_(from.send_),
      recv_key_(from.recv_key_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  graph_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.graph_handle().size() > 0) {
    graph_handle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.graph_handle(),
      GetArenaNoVirtual());
  }
  session_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_handle().size() > 0) {
    session_handle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_handle(),
      GetArenaNoVirtual());
  }
  if (from.has_exec_opts()) {
    exec_opts_ = new ::tensorflow::ExecutorOpts(*from.exec_opts_);
  } else {
    exec_opts_ = NULL;
  }
  ::memcpy(&step_id_, &from.step_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&store_errors_in_response_body_) -
    reinterpret_cast<char*>(&step_id_)) + sizeof(store_errors_in_response_body_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.RunGraphRequest)
}

void RunGraphRequest::SharedCtor() {
  graph_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&exec_opts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&store_errors_in_response_body_) -
      reinterpret_cast<char*>(&exec_opts_)) + sizeof(store_errors_in_response_body_));
}

RunGraphRequest::~RunGraphRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.RunGraphRequest)
  SharedDtor();
}

void RunGraphRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  graph_handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete exec_opts_;
}

void RunGraphRequest::ArenaDtor(void* object) {
  RunGraphRequest* _this = reinterpret_cast< RunGraphRequest* >(object);
  (void)_this;
}
void RunGraphRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RunGraphRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RunGraphRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunGraphRequest& RunGraphRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RunGraphRequest.base);
  return *internal_default_instance();
}


void RunGraphRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.RunGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  send_.Clear();
  recv_key_.Clear();
  graph_handle_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  session_handle_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && exec_opts_ != NULL) {
    delete exec_opts_;
  }
  exec_opts_ = NULL;
  ::memset(&step_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&store_errors_in_response_body_) -
      reinterpret_cast<char*>(&step_id_)) + sizeof(store_errors_in_response_body_));
  _internal_metadata_.Clear();
}

bool RunGraphRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.RunGraphRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string graph_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_graph_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->graph_handle().data(), static_cast<int>(this->graph_handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.RunGraphRequest.graph_handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 step_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &step_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.NamedTensorProto send = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_send()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string recv_key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_recv_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->recv_key(this->recv_key_size() - 1).data(),
            static_cast<int>(this->recv_key(this->recv_key_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.RunGraphRequest.recv_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.ExecutorOpts exec_opts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exec_opts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_partial = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_partial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_last_partial_run = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_last_partial_run_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string session_handle = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_handle().data(), static_cast<int>(this->session_handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.RunGraphRequest.session_handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool store_errors_in_response_body = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &store_errors_in_response_body_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool create_worker_session_called = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &create_worker_session_called_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.RunGraphRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.RunGraphRequest)
  return false;
#undef DO_
}

void RunGraphRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.RunGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string graph_handle = 1;
  if (this->graph_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_handle().data(), static_cast<int>(this->graph_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RunGraphRequest.graph_handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->graph_handle(), output);
  }

  // int64 step_id = 2;
  if (this->step_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->step_id(), output);
  }

  // repeated .tensorflow.NamedTensorProto send = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->send_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->send(static_cast<int>(i)),
      output);
  }

  // repeated string recv_key = 4;
  for (int i = 0, n = this->recv_key_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recv_key(i).data(), static_cast<int>(this->recv_key(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RunGraphRequest.recv_key");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->recv_key(i), output);
  }

  // .tensorflow.ExecutorOpts exec_opts = 5;
  if (this->has_exec_opts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_exec_opts(), output);
  }

  // bool is_partial = 6;
  if (this->is_partial() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_partial(), output);
  }

  // bool is_last_partial_run = 7;
  if (this->is_last_partial_run() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_last_partial_run(), output);
  }

  // string session_handle = 8;
  if (this->session_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_handle().data(), static_cast<int>(this->session_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RunGraphRequest.session_handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->session_handle(), output);
  }

  // bool store_errors_in_response_body = 9;
  if (this->store_errors_in_response_body() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->store_errors_in_response_body(), output);
  }

  // bool create_worker_session_called = 10;
  if (this->create_worker_session_called() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->create_worker_session_called(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.RunGraphRequest)
}

::google::protobuf::uint8* RunGraphRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.RunGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string graph_handle = 1;
  if (this->graph_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_handle().data(), static_cast<int>(this->graph_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RunGraphRequest.graph_handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->graph_handle(), target);
  }

  // int64 step_id = 2;
  if (this->step_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->step_id(), target);
  }

  // repeated .tensorflow.NamedTensorProto send = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->send_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->send(static_cast<int>(i)), deterministic, target);
  }

  // repeated string recv_key = 4;
  for (int i = 0, n = this->recv_key_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recv_key(i).data(), static_cast<int>(this->recv_key(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RunGraphRequest.recv_key");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->recv_key(i), target);
  }

  // .tensorflow.ExecutorOpts exec_opts = 5;
  if (this->has_exec_opts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_exec_opts(), deterministic, target);
  }

  // bool is_partial = 6;
  if (this->is_partial() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_partial(), target);
  }

  // bool is_last_partial_run = 7;
  if (this->is_last_partial_run() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_last_partial_run(), target);
  }

  // string session_handle = 8;
  if (this->session_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_handle().data(), static_cast<int>(this->session_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RunGraphRequest.session_handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->session_handle(), target);
  }

  // bool store_errors_in_response_body = 9;
  if (this->store_errors_in_response_body() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->store_errors_in_response_body(), target);
  }

  // bool create_worker_session_called = 10;
  if (this->create_worker_session_called() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->create_worker_session_called(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.RunGraphRequest)
  return target;
}

size_t RunGraphRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.RunGraphRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.NamedTensorProto send = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->send_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->send(static_cast<int>(i)));
    }
  }

  // repeated string recv_key = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->recv_key_size());
  for (int i = 0, n = this->recv_key_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->recv_key(i));
  }

  // string graph_handle = 1;
  if (this->graph_handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->graph_handle());
  }

  // string session_handle = 8;
  if (this->session_handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_handle());
  }

  // .tensorflow.ExecutorOpts exec_opts = 5;
  if (this->has_exec_opts()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *exec_opts_);
  }

  // int64 step_id = 2;
  if (this->step_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->step_id());
  }

  // bool create_worker_session_called = 10;
  if (this->create_worker_session_called() != 0) {
    total_size += 1 + 1;
  }

  // bool is_partial = 6;
  if (this->is_partial() != 0) {
    total_size += 1 + 1;
  }

  // bool is_last_partial_run = 7;
  if (this->is_last_partial_run() != 0) {
    total_size += 1 + 1;
  }

  // bool store_errors_in_response_body = 9;
  if (this->store_errors_in_response_body() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RunGraphRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.RunGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RunGraphRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunGraphRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.RunGraphRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.RunGraphRequest)
    MergeFrom(*source);
  }
}

void RunGraphRequest::MergeFrom(const RunGraphRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.RunGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  send_.MergeFrom(from.send_);
  recv_key_.MergeFrom(from.recv_key_);
  if (from.graph_handle().size() > 0) {
    set_graph_handle(from.graph_handle());
  }
  if (from.session_handle().size() > 0) {
    set_session_handle(from.session_handle());
  }
  if (from.has_exec_opts()) {
    mutable_exec_opts()->::tensorflow::ExecutorOpts::MergeFrom(from.exec_opts());
  }
  if (from.step_id() != 0) {
    set_step_id(from.step_id());
  }
  if (from.create_worker_session_called() != 0) {
    set_create_worker_session_called(from.create_worker_session_called());
  }
  if (from.is_partial() != 0) {
    set_is_partial(from.is_partial());
  }
  if (from.is_last_partial_run() != 0) {
    set_is_last_partial_run(from.is_last_partial_run());
  }
  if (from.store_errors_in_response_body() != 0) {
    set_store_errors_in_response_body(from.store_errors_in_response_body());
  }
}

void RunGraphRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.RunGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunGraphRequest::CopyFrom(const RunGraphRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.RunGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunGraphRequest::IsInitialized() const {
  return true;
}

void RunGraphRequest::Swap(RunGraphRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RunGraphRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RunGraphRequest::UnsafeArenaSwap(RunGraphRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RunGraphRequest::InternalSwap(RunGraphRequest* other) {
  using std::swap;
  CastToBase(&send_)->InternalSwap(CastToBase(&other->send_));
  recv_key_.InternalSwap(CastToBase(&other->recv_key_));
  graph_handle_.Swap(&other->graph_handle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  session_handle_.Swap(&other->session_handle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(exec_opts_, other->exec_opts_);
  swap(step_id_, other->step_id_);
  swap(create_worker_session_called_, other->create_worker_session_called_);
  swap(is_partial_, other->is_partial_);
  swap(is_last_partial_run_, other->is_last_partial_run_);
  swap(store_errors_in_response_body_, other->store_errors_in_response_body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RunGraphRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RunGraphResponse::InitAsDefaultInstance() {
  ::tensorflow::_RunGraphResponse_default_instance_._instance.get_mutable()->step_stats_ = const_cast< ::tensorflow::StepStats*>(
      ::tensorflow::StepStats::internal_default_instance());
  ::tensorflow::_RunGraphResponse_default_instance_._instance.get_mutable()->cost_graph_ = const_cast< ::tensorflow::CostGraphDef*>(
      ::tensorflow::CostGraphDef::internal_default_instance());
}
void RunGraphResponse::clear_recv() {
  recv_.Clear();
}
void RunGraphResponse::unsafe_arena_set_allocated_step_stats(
    ::tensorflow::StepStats* step_stats) {
  if (GetArenaNoVirtual() == NULL) {
    delete step_stats_;
  }
  step_stats_ = step_stats;
  if (step_stats) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RunGraphResponse.step_stats)
}
void RunGraphResponse::clear_step_stats() {
  if (GetArenaNoVirtual() == NULL && step_stats_ != NULL) {
    delete step_stats_;
  }
  step_stats_ = NULL;
}
void RunGraphResponse::unsafe_arena_set_allocated_cost_graph(
    ::tensorflow::CostGraphDef* cost_graph) {
  if (GetArenaNoVirtual() == NULL) {
    delete cost_graph_;
  }
  cost_graph_ = cost_graph;
  if (cost_graph) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RunGraphResponse.cost_graph)
}
void RunGraphResponse::clear_cost_graph() {
  if (GetArenaNoVirtual() == NULL && cost_graph_ != NULL) {
    delete cost_graph_;
  }
  cost_graph_ = NULL;
}
void RunGraphResponse::clear_partition_graph() {
  partition_graph_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunGraphResponse::kRecvFieldNumber;
const int RunGraphResponse::kStepStatsFieldNumber;
const int RunGraphResponse::kCostGraphFieldNumber;
const int RunGraphResponse::kPartitionGraphFieldNumber;
const int RunGraphResponse::kStatusCodeFieldNumber;
const int RunGraphResponse::kStatusErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunGraphResponse::RunGraphResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RunGraphResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.RunGraphResponse)
}
RunGraphResponse::RunGraphResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  recv_(arena),
  partition_graph_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RunGraphResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.RunGraphResponse)
}
RunGraphResponse::RunGraphResponse(const RunGraphResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      recv_(from.recv_),
      partition_graph_(from.partition_graph_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status_error_message().size() > 0) {
    status_error_message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_error_message(),
      GetArenaNoVirtual());
  }
  if (from.has_step_stats()) {
    step_stats_ = new ::tensorflow::StepStats(*from.step_stats_);
  } else {
    step_stats_ = NULL;
  }
  if (from.has_cost_graph()) {
    cost_graph_ = new ::tensorflow::CostGraphDef(*from.cost_graph_);
  } else {
    cost_graph_ = NULL;
  }
  status_code_ = from.status_code_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.RunGraphResponse)
}

void RunGraphResponse::SharedCtor() {
  status_error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&step_stats_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_code_) -
      reinterpret_cast<char*>(&step_stats_)) + sizeof(status_code_));
}

RunGraphResponse::~RunGraphResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.RunGraphResponse)
  SharedDtor();
}

void RunGraphResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  status_error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete step_stats_;
  if (this != internal_default_instance()) delete cost_graph_;
}

void RunGraphResponse::ArenaDtor(void* object) {
  RunGraphResponse* _this = reinterpret_cast< RunGraphResponse* >(object);
  (void)_this;
}
void RunGraphResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RunGraphResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RunGraphResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunGraphResponse& RunGraphResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RunGraphResponse.base);
  return *internal_default_instance();
}


void RunGraphResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.RunGraphResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recv_.Clear();
  partition_graph_.Clear();
  status_error_message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && step_stats_ != NULL) {
    delete step_stats_;
  }
  step_stats_ = NULL;
  if (GetArenaNoVirtual() == NULL && cost_graph_ != NULL) {
    delete cost_graph_;
  }
  cost_graph_ = NULL;
  status_code_ = 0;
  _internal_metadata_.Clear();
}

bool RunGraphResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.RunGraphResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.NamedTensorProto recv = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_recv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.StepStats step_stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_step_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.CostGraphDef cost_graph = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cost_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.GraphDef partition_graph = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_partition_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.error.Code status_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status_code(static_cast< ::tensorflow::error::Code >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status_error_message = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status_error_message().data(), static_cast<int>(this->status_error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.RunGraphResponse.status_error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.RunGraphResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.RunGraphResponse)
  return false;
#undef DO_
}

void RunGraphResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.RunGraphResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.NamedTensorProto recv = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->recv_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->recv(static_cast<int>(i)),
      output);
  }

  // .tensorflow.StepStats step_stats = 2;
  if (this->has_step_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_step_stats(), output);
  }

  // .tensorflow.CostGraphDef cost_graph = 3;
  if (this->has_cost_graph()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_cost_graph(), output);
  }

  // repeated .tensorflow.GraphDef partition_graph = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->partition_graph_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->partition_graph(static_cast<int>(i)),
      output);
  }

  // .tensorflow.error.Code status_code = 5;
  if (this->status_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->status_code(), output);
  }

  // string status_error_message = 6;
  if (this->status_error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_error_message().data(), static_cast<int>(this->status_error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RunGraphResponse.status_error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->status_error_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.RunGraphResponse)
}

::google::protobuf::uint8* RunGraphResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.RunGraphResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.NamedTensorProto recv = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->recv_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->recv(static_cast<int>(i)), deterministic, target);
  }

  // .tensorflow.StepStats step_stats = 2;
  if (this->has_step_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_step_stats(), deterministic, target);
  }

  // .tensorflow.CostGraphDef cost_graph = 3;
  if (this->has_cost_graph()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_cost_graph(), deterministic, target);
  }

  // repeated .tensorflow.GraphDef partition_graph = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->partition_graph_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->partition_graph(static_cast<int>(i)), deterministic, target);
  }

  // .tensorflow.error.Code status_code = 5;
  if (this->status_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->status_code(), target);
  }

  // string status_error_message = 6;
  if (this->status_error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_error_message().data(), static_cast<int>(this->status_error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RunGraphResponse.status_error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->status_error_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.RunGraphResponse)
  return target;
}

size_t RunGraphResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.RunGraphResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.NamedTensorProto recv = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->recv_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->recv(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.GraphDef partition_graph = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->partition_graph_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->partition_graph(static_cast<int>(i)));
    }
  }

  // string status_error_message = 6;
  if (this->status_error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_error_message());
  }

  // .tensorflow.StepStats step_stats = 2;
  if (this->has_step_stats()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *step_stats_);
  }

  // .tensorflow.CostGraphDef cost_graph = 3;
  if (this->has_cost_graph()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cost_graph_);
  }

  // .tensorflow.error.Code status_code = 5;
  if (this->status_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RunGraphResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.RunGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RunGraphResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunGraphResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.RunGraphResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.RunGraphResponse)
    MergeFrom(*source);
  }
}

void RunGraphResponse::MergeFrom(const RunGraphResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.RunGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  recv_.MergeFrom(from.recv_);
  partition_graph_.MergeFrom(from.partition_graph_);
  if (from.status_error_message().size() > 0) {
    set_status_error_message(from.status_error_message());
  }
  if (from.has_step_stats()) {
    mutable_step_stats()->::tensorflow::StepStats::MergeFrom(from.step_stats());
  }
  if (from.has_cost_graph()) {
    mutable_cost_graph()->::tensorflow::CostGraphDef::MergeFrom(from.cost_graph());
  }
  if (from.status_code() != 0) {
    set_status_code(from.status_code());
  }
}

void RunGraphResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.RunGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunGraphResponse::CopyFrom(const RunGraphResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.RunGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunGraphResponse::IsInitialized() const {
  return true;
}

void RunGraphResponse::Swap(RunGraphResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RunGraphResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RunGraphResponse::UnsafeArenaSwap(RunGraphResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RunGraphResponse::InternalSwap(RunGraphResponse* other) {
  using std::swap;
  CastToBase(&recv_)->InternalSwap(CastToBase(&other->recv_));
  CastToBase(&partition_graph_)->InternalSwap(CastToBase(&other->partition_graph_));
  status_error_message_.Swap(&other->status_error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(step_stats_, other->step_stats_);
  swap(cost_graph_, other->cost_graph_);
  swap(status_code_, other->status_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RunGraphResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CleanupGraphRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CleanupGraphRequest::kStepIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CleanupGraphRequest::CleanupGraphRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CleanupGraphRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CleanupGraphRequest)
}
CleanupGraphRequest::CleanupGraphRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CleanupGraphRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CleanupGraphRequest)
}
CleanupGraphRequest::CleanupGraphRequest(const CleanupGraphRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  step_id_ = from.step_id_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.CleanupGraphRequest)
}

void CleanupGraphRequest::SharedCtor() {
  step_id_ = GOOGLE_LONGLONG(0);
}

CleanupGraphRequest::~CleanupGraphRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.CleanupGraphRequest)
  SharedDtor();
}

void CleanupGraphRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void CleanupGraphRequest::ArenaDtor(void* object) {
  CleanupGraphRequest* _this = reinterpret_cast< CleanupGraphRequest* >(object);
  (void)_this;
}
void CleanupGraphRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CleanupGraphRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CleanupGraphRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CleanupGraphRequest& CleanupGraphRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CleanupGraphRequest.base);
  return *internal_default_instance();
}


void CleanupGraphRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CleanupGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  step_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool CleanupGraphRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CleanupGraphRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 step_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &step_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CleanupGraphRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CleanupGraphRequest)
  return false;
#undef DO_
}

void CleanupGraphRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CleanupGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 step_id = 1;
  if (this->step_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->step_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CleanupGraphRequest)
}

::google::protobuf::uint8* CleanupGraphRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CleanupGraphRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 step_id = 1;
  if (this->step_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->step_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CleanupGraphRequest)
  return target;
}

size_t CleanupGraphRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CleanupGraphRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 step_id = 1;
  if (this->step_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->step_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CleanupGraphRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CleanupGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CleanupGraphRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CleanupGraphRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CleanupGraphRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CleanupGraphRequest)
    MergeFrom(*source);
  }
}

void CleanupGraphRequest::MergeFrom(const CleanupGraphRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CleanupGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.step_id() != 0) {
    set_step_id(from.step_id());
  }
}

void CleanupGraphRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CleanupGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CleanupGraphRequest::CopyFrom(const CleanupGraphRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CleanupGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CleanupGraphRequest::IsInitialized() const {
  return true;
}

void CleanupGraphRequest::Swap(CleanupGraphRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CleanupGraphRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CleanupGraphRequest::UnsafeArenaSwap(CleanupGraphRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CleanupGraphRequest::InternalSwap(CleanupGraphRequest* other) {
  using std::swap;
  swap(step_id_, other->step_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CleanupGraphRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CleanupGraphResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CleanupGraphResponse::CleanupGraphResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CleanupGraphResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CleanupGraphResponse)
}
CleanupGraphResponse::CleanupGraphResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CleanupGraphResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CleanupGraphResponse)
}
CleanupGraphResponse::CleanupGraphResponse(const CleanupGraphResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CleanupGraphResponse)
}

void CleanupGraphResponse::SharedCtor() {
}

CleanupGraphResponse::~CleanupGraphResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.CleanupGraphResponse)
  SharedDtor();
}

void CleanupGraphResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void CleanupGraphResponse::ArenaDtor(void* object) {
  CleanupGraphResponse* _this = reinterpret_cast< CleanupGraphResponse* >(object);
  (void)_this;
}
void CleanupGraphResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CleanupGraphResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CleanupGraphResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CleanupGraphResponse& CleanupGraphResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CleanupGraphResponse.base);
  return *internal_default_instance();
}


void CleanupGraphResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CleanupGraphResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CleanupGraphResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CleanupGraphResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CleanupGraphResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CleanupGraphResponse)
  return false;
#undef DO_
}

void CleanupGraphResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CleanupGraphResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CleanupGraphResponse)
}

::google::protobuf::uint8* CleanupGraphResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CleanupGraphResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CleanupGraphResponse)
  return target;
}

size_t CleanupGraphResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CleanupGraphResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CleanupGraphResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CleanupGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CleanupGraphResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CleanupGraphResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CleanupGraphResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CleanupGraphResponse)
    MergeFrom(*source);
  }
}

void CleanupGraphResponse::MergeFrom(const CleanupGraphResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CleanupGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CleanupGraphResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CleanupGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CleanupGraphResponse::CopyFrom(const CleanupGraphResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CleanupGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CleanupGraphResponse::IsInitialized() const {
  return true;
}

void CleanupGraphResponse::Swap(CleanupGraphResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CleanupGraphResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CleanupGraphResponse::UnsafeArenaSwap(CleanupGraphResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CleanupGraphResponse::InternalSwap(CleanupGraphResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CleanupGraphResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecvTensorRequest::InitAsDefaultInstance() {
  ::tensorflow::_RecvTensorRequest_default_instance_._instance.get_mutable()->client_locality_ = const_cast< ::tensorflow::DeviceLocality*>(
      ::tensorflow::DeviceLocality::internal_default_instance());
  ::tensorflow::_RecvTensorRequest_default_instance_._instance.get_mutable()->server_locality_ = const_cast< ::tensorflow::DeviceLocality*>(
      ::tensorflow::DeviceLocality::internal_default_instance());
  ::tensorflow::_RecvTensorRequest_default_instance_._instance.get_mutable()->transport_options_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void RecvTensorRequest::unsafe_arena_set_allocated_client_locality(
    ::tensorflow::DeviceLocality* client_locality) {
  if (GetArenaNoVirtual() == NULL) {
    delete client_locality_;
  }
  client_locality_ = client_locality;
  if (client_locality) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvTensorRequest.client_locality)
}
void RecvTensorRequest::clear_client_locality() {
  if (GetArenaNoVirtual() == NULL && client_locality_ != NULL) {
    delete client_locality_;
  }
  client_locality_ = NULL;
}
void RecvTensorRequest::unsafe_arena_set_allocated_server_locality(
    ::tensorflow::DeviceLocality* server_locality) {
  if (GetArenaNoVirtual() == NULL) {
    delete server_locality_;
  }
  server_locality_ = server_locality;
  if (server_locality) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvTensorRequest.server_locality)
}
void RecvTensorRequest::clear_server_locality() {
  if (GetArenaNoVirtual() == NULL && server_locality_ != NULL) {
    delete server_locality_;
  }
  server_locality_ = NULL;
}
void RecvTensorRequest::unsafe_arena_set_allocated_transport_options(
    ::google::protobuf::Any* transport_options) {
  if (GetArenaNoVirtual() == NULL) {
    delete transport_options_;
  }
  transport_options_ = transport_options;
  if (transport_options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvTensorRequest.transport_options)
}
void RecvTensorRequest::clear_transport_options() {
  if (GetArenaNoVirtual() == NULL && transport_options_ != NULL) {
    delete transport_options_;
  }
  transport_options_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecvTensorRequest::kStepIdFieldNumber;
const int RecvTensorRequest::kRendezvousKeyFieldNumber;
const int RecvTensorRequest::kDmaOkFieldNumber;
const int RecvTensorRequest::kClientLocalityFieldNumber;
const int RecvTensorRequest::kServerLocalityFieldNumber;
const int RecvTensorRequest::kTransportOptionsFieldNumber;
const int RecvTensorRequest::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecvTensorRequest::RecvTensorRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RecvTensorRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.RecvTensorRequest)
}
RecvTensorRequest::RecvTensorRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RecvTensorRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.RecvTensorRequest)
}
RecvTensorRequest::RecvTensorRequest(const RecvTensorRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rendezvous_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rendezvous_key().size() > 0) {
    rendezvous_key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rendezvous_key(),
      GetArenaNoVirtual());
  }
  if (from.has_client_locality()) {
    client_locality_ = new ::tensorflow::DeviceLocality(*from.client_locality_);
  } else {
    client_locality_ = NULL;
  }
  if (from.has_server_locality()) {
    server_locality_ = new ::tensorflow::DeviceLocality(*from.server_locality_);
  } else {
    server_locality_ = NULL;
  }
  if (from.has_transport_options()) {
    transport_options_ = new ::google::protobuf::Any(*from.transport_options_);
  } else {
    transport_options_ = NULL;
  }
  ::memcpy(&step_id_, &from.step_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&dma_ok_) -
    reinterpret_cast<char*>(&step_id_)) + sizeof(dma_ok_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.RecvTensorRequest)
}

void RecvTensorRequest::SharedCtor() {
  rendezvous_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&client_locality_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dma_ok_) -
      reinterpret_cast<char*>(&client_locality_)) + sizeof(dma_ok_));
}

RecvTensorRequest::~RecvTensorRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.RecvTensorRequest)
  SharedDtor();
}

void RecvTensorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  rendezvous_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete client_locality_;
  if (this != internal_default_instance()) delete server_locality_;
  if (this != internal_default_instance()) delete transport_options_;
}

void RecvTensorRequest::ArenaDtor(void* object) {
  RecvTensorRequest* _this = reinterpret_cast< RecvTensorRequest* >(object);
  (void)_this;
}
void RecvTensorRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RecvTensorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RecvTensorRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecvTensorRequest& RecvTensorRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RecvTensorRequest.base);
  return *internal_default_instance();
}


void RecvTensorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.RecvTensorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rendezvous_key_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && client_locality_ != NULL) {
    delete client_locality_;
  }
  client_locality_ = NULL;
  if (GetArenaNoVirtual() == NULL && server_locality_ != NULL) {
    delete server_locality_;
  }
  server_locality_ = NULL;
  if (GetArenaNoVirtual() == NULL && transport_options_ != NULL) {
    delete transport_options_;
  }
  transport_options_ = NULL;
  ::memset(&step_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dma_ok_) -
      reinterpret_cast<char*>(&step_id_)) + sizeof(dma_ok_));
  _internal_metadata_.Clear();
}

bool RecvTensorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.RecvTensorRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 step_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &step_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rendezvous_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rendezvous_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rendezvous_key().data(), static_cast<int>(this->rendezvous_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.RecvTensorRequest.rendezvous_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool dma_ok = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dma_ok_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.DeviceLocality client_locality = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_locality()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.DeviceLocality server_locality = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server_locality()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any transport_options = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transport_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 request_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.RecvTensorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.RecvTensorRequest)
  return false;
#undef DO_
}

void RecvTensorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.RecvTensorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 step_id = 1;
  if (this->step_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->step_id(), output);
  }

  // string rendezvous_key = 2;
  if (this->rendezvous_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rendezvous_key().data(), static_cast<int>(this->rendezvous_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RecvTensorRequest.rendezvous_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rendezvous_key(), output);
  }

  // bool dma_ok = 3;
  if (this->dma_ok() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->dma_ok(), output);
  }

  // .tensorflow.DeviceLocality client_locality = 4;
  if (this->has_client_locality()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_client_locality(), output);
  }

  // .tensorflow.DeviceLocality server_locality = 5;
  if (this->has_server_locality()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_server_locality(), output);
  }

  // .google.protobuf.Any transport_options = 6;
  if (this->has_transport_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_transport_options(), output);
  }

  // int64 request_id = 7;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->request_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.RecvTensorRequest)
}

::google::protobuf::uint8* RecvTensorRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.RecvTensorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 step_id = 1;
  if (this->step_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->step_id(), target);
  }

  // string rendezvous_key = 2;
  if (this->rendezvous_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rendezvous_key().data(), static_cast<int>(this->rendezvous_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RecvTensorRequest.rendezvous_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rendezvous_key(), target);
  }

  // bool dma_ok = 3;
  if (this->dma_ok() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->dma_ok(), target);
  }

  // .tensorflow.DeviceLocality client_locality = 4;
  if (this->has_client_locality()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_client_locality(), deterministic, target);
  }

  // .tensorflow.DeviceLocality server_locality = 5;
  if (this->has_server_locality()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_server_locality(), deterministic, target);
  }

  // .google.protobuf.Any transport_options = 6;
  if (this->has_transport_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_transport_options(), deterministic, target);
  }

  // int64 request_id = 7;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->request_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.RecvTensorRequest)
  return target;
}

size_t RecvTensorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.RecvTensorRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string rendezvous_key = 2;
  if (this->rendezvous_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rendezvous_key());
  }

  // .tensorflow.DeviceLocality client_locality = 4;
  if (this->has_client_locality()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_locality_);
  }

  // .tensorflow.DeviceLocality server_locality = 5;
  if (this->has_server_locality()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *server_locality_);
  }

  // .google.protobuf.Any transport_options = 6;
  if (this->has_transport_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transport_options_);
  }

  // int64 step_id = 1;
  if (this->step_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->step_id());
  }

  // int64 request_id = 7;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->request_id());
  }

  // bool dma_ok = 3;
  if (this->dma_ok() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecvTensorRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.RecvTensorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RecvTensorRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecvTensorRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.RecvTensorRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.RecvTensorRequest)
    MergeFrom(*source);
  }
}

void RecvTensorRequest::MergeFrom(const RecvTensorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.RecvTensorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rendezvous_key().size() > 0) {
    set_rendezvous_key(from.rendezvous_key());
  }
  if (from.has_client_locality()) {
    mutable_client_locality()->::tensorflow::DeviceLocality::MergeFrom(from.client_locality());
  }
  if (from.has_server_locality()) {
    mutable_server_locality()->::tensorflow::DeviceLocality::MergeFrom(from.server_locality());
  }
  if (from.has_transport_options()) {
    mutable_transport_options()->::google::protobuf::Any::MergeFrom(from.transport_options());
  }
  if (from.step_id() != 0) {
    set_step_id(from.step_id());
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
  if (from.dma_ok() != 0) {
    set_dma_ok(from.dma_ok());
  }
}

void RecvTensorRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.RecvTensorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecvTensorRequest::CopyFrom(const RecvTensorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.RecvTensorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecvTensorRequest::IsInitialized() const {
  return true;
}

void RecvTensorRequest::Swap(RecvTensorRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RecvTensorRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RecvTensorRequest::UnsafeArenaSwap(RecvTensorRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RecvTensorRequest::InternalSwap(RecvTensorRequest* other) {
  using std::swap;
  rendezvous_key_.Swap(&other->rendezvous_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(client_locality_, other->client_locality_);
  swap(server_locality_, other->server_locality_);
  swap(transport_options_, other->transport_options_);
  swap(step_id_, other->step_id_);
  swap(request_id_, other->request_id_);
  swap(dma_ok_, other->dma_ok_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecvTensorRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecvTensorResponse::InitAsDefaultInstance() {
  ::tensorflow::_RecvTensorResponse_default_instance_._instance.get_mutable()->tensor_ = const_cast< ::tensorflow::TensorProto*>(
      ::tensorflow::TensorProto::internal_default_instance());
  ::tensorflow::_RecvTensorResponse_default_instance_._instance.get_mutable()->transport_options_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void RecvTensorResponse::unsafe_arena_set_allocated_tensor(
    ::tensorflow::TensorProto* tensor) {
  if (GetArenaNoVirtual() == NULL) {
    delete tensor_;
  }
  tensor_ = tensor;
  if (tensor) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvTensorResponse.tensor)
}
void RecvTensorResponse::clear_tensor() {
  if (GetArenaNoVirtual() == NULL && tensor_ != NULL) {
    delete tensor_;
  }
  tensor_ = NULL;
}
void RecvTensorResponse::unsafe_arena_set_allocated_transport_options(
    ::google::protobuf::Any* transport_options) {
  if (GetArenaNoVirtual() == NULL) {
    delete transport_options_;
  }
  transport_options_ = transport_options;
  if (transport_options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvTensorResponse.transport_options)
}
void RecvTensorResponse::clear_transport_options() {
  if (GetArenaNoVirtual() == NULL && transport_options_ != NULL) {
    delete transport_options_;
  }
  transport_options_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecvTensorResponse::kTensorFieldNumber;
const int RecvTensorResponse::kIsDeadFieldNumber;
const int RecvTensorResponse::kSendStartMicrosFieldNumber;
const int RecvTensorResponse::kTransportOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecvTensorResponse::RecvTensorResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RecvTensorResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.RecvTensorResponse)
}
RecvTensorResponse::RecvTensorResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RecvTensorResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.RecvTensorResponse)
}
RecvTensorResponse::RecvTensorResponse(const RecvTensorResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tensor()) {
    tensor_ = new ::tensorflow::TensorProto(*from.tensor_);
  } else {
    tensor_ = NULL;
  }
  if (from.has_transport_options()) {
    transport_options_ = new ::google::protobuf::Any(*from.transport_options_);
  } else {
    transport_options_ = NULL;
  }
  ::memcpy(&send_start_micros_, &from.send_start_micros_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_dead_) -
    reinterpret_cast<char*>(&send_start_micros_)) + sizeof(is_dead_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.RecvTensorResponse)
}

void RecvTensorResponse::SharedCtor() {
  ::memset(&tensor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_dead_) -
      reinterpret_cast<char*>(&tensor_)) + sizeof(is_dead_));
}

RecvTensorResponse::~RecvTensorResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.RecvTensorResponse)
  SharedDtor();
}

void RecvTensorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete tensor_;
  if (this != internal_default_instance()) delete transport_options_;
}

void RecvTensorResponse::ArenaDtor(void* object) {
  RecvTensorResponse* _this = reinterpret_cast< RecvTensorResponse* >(object);
  (void)_this;
}
void RecvTensorResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RecvTensorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RecvTensorResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecvTensorResponse& RecvTensorResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RecvTensorResponse.base);
  return *internal_default_instance();
}


void RecvTensorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.RecvTensorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && tensor_ != NULL) {
    delete tensor_;
  }
  tensor_ = NULL;
  if (GetArenaNoVirtual() == NULL && transport_options_ != NULL) {
    delete transport_options_;
  }
  transport_options_ = NULL;
  ::memset(&send_start_micros_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_dead_) -
      reinterpret_cast<char*>(&send_start_micros_)) + sizeof(is_dead_));
  _internal_metadata_.Clear();
}

bool RecvTensorResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.RecvTensorResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.TensorProto tensor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tensor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_dead = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_dead_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 send_start_micros = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &send_start_micros_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any transport_options = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transport_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.RecvTensorResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.RecvTensorResponse)
  return false;
#undef DO_
}

void RecvTensorResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.RecvTensorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.TensorProto tensor = 1;
  if (this->has_tensor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_tensor(), output);
  }

  // bool is_dead = 2;
  if (this->is_dead() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_dead(), output);
  }

  // int64 send_start_micros = 3;
  if (this->send_start_micros() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->send_start_micros(), output);
  }

  // .google.protobuf.Any transport_options = 4;
  if (this->has_transport_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_transport_options(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.RecvTensorResponse)
}

::google::protobuf::uint8* RecvTensorResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.RecvTensorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.TensorProto tensor = 1;
  if (this->has_tensor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_tensor(), deterministic, target);
  }

  // bool is_dead = 2;
  if (this->is_dead() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_dead(), target);
  }

  // int64 send_start_micros = 3;
  if (this->send_start_micros() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->send_start_micros(), target);
  }

  // .google.protobuf.Any transport_options = 4;
  if (this->has_transport_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_transport_options(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.RecvTensorResponse)
  return target;
}

size_t RecvTensorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.RecvTensorResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.TensorProto tensor = 1;
  if (this->has_tensor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tensor_);
  }

  // .google.protobuf.Any transport_options = 4;
  if (this->has_transport_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transport_options_);
  }

  // int64 send_start_micros = 3;
  if (this->send_start_micros() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->send_start_micros());
  }

  // bool is_dead = 2;
  if (this->is_dead() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecvTensorResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.RecvTensorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RecvTensorResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecvTensorResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.RecvTensorResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.RecvTensorResponse)
    MergeFrom(*source);
  }
}

void RecvTensorResponse::MergeFrom(const RecvTensorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.RecvTensorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tensor()) {
    mutable_tensor()->::tensorflow::TensorProto::MergeFrom(from.tensor());
  }
  if (from.has_transport_options()) {
    mutable_transport_options()->::google::protobuf::Any::MergeFrom(from.transport_options());
  }
  if (from.send_start_micros() != 0) {
    set_send_start_micros(from.send_start_micros());
  }
  if (from.is_dead() != 0) {
    set_is_dead(from.is_dead());
  }
}

void RecvTensorResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.RecvTensorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecvTensorResponse::CopyFrom(const RecvTensorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.RecvTensorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecvTensorResponse::IsInitialized() const {
  return true;
}

void RecvTensorResponse::Swap(RecvTensorResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RecvTensorResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RecvTensorResponse::UnsafeArenaSwap(RecvTensorResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RecvTensorResponse::InternalSwap(RecvTensorResponse* other) {
  using std::swap;
  swap(tensor_, other->tensor_);
  swap(transport_options_, other->transport_options_);
  swap(send_start_micros_, other->send_start_micros_);
  swap(is_dead_, other->is_dead_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecvTensorResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoggingRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoggingRequest::kEnableRpcLoggingFieldNumber;
const int LoggingRequest::kDisableRpcLoggingFieldNumber;
const int LoggingRequest::kClearFieldNumber;
const int LoggingRequest::kFetchStepIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoggingRequest::LoggingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_LoggingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.LoggingRequest)
}
LoggingRequest::LoggingRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  fetch_step_id_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_LoggingRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.LoggingRequest)
}
LoggingRequest::LoggingRequest(const LoggingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fetch_step_id_(from.fetch_step_id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&enable_rpc_logging_, &from.enable_rpc_logging_,
    static_cast<size_t>(reinterpret_cast<char*>(&clear_) -
    reinterpret_cast<char*>(&enable_rpc_logging_)) + sizeof(clear_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.LoggingRequest)
}

void LoggingRequest::SharedCtor() {
  ::memset(&enable_rpc_logging_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clear_) -
      reinterpret_cast<char*>(&enable_rpc_logging_)) + sizeof(clear_));
}

LoggingRequest::~LoggingRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.LoggingRequest)
  SharedDtor();
}

void LoggingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void LoggingRequest::ArenaDtor(void* object) {
  LoggingRequest* _this = reinterpret_cast< LoggingRequest* >(object);
  (void)_this;
}
void LoggingRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LoggingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoggingRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoggingRequest& LoggingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_LoggingRequest.base);
  return *internal_default_instance();
}


void LoggingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.LoggingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fetch_step_id_.Clear();
  ::memset(&enable_rpc_logging_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clear_) -
      reinterpret_cast<char*>(&enable_rpc_logging_)) + sizeof(clear_));
  _internal_metadata_.Clear();
}

bool LoggingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.LoggingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enable_rpc_logging = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_rpc_logging_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool clear = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 fetch_step_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_fetch_step_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26u, input, this->mutable_fetch_step_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool disable_rpc_logging = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disable_rpc_logging_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.LoggingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.LoggingRequest)
  return false;
#undef DO_
}

void LoggingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.LoggingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable_rpc_logging = 1;
  if (this->enable_rpc_logging() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enable_rpc_logging(), output);
  }

  // bool clear = 2;
  if (this->clear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->clear(), output);
  }

  // repeated int64 fetch_step_id = 3;
  if (this->fetch_step_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _fetch_step_id_cached_byte_size_));
  }
  for (int i = 0, n = this->fetch_step_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->fetch_step_id(i), output);
  }

  // bool disable_rpc_logging = 4;
  if (this->disable_rpc_logging() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->disable_rpc_logging(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.LoggingRequest)
}

::google::protobuf::uint8* LoggingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.LoggingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable_rpc_logging = 1;
  if (this->enable_rpc_logging() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enable_rpc_logging(), target);
  }

  // bool clear = 2;
  if (this->clear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->clear(), target);
  }

  // repeated int64 fetch_step_id = 3;
  if (this->fetch_step_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _fetch_step_id_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->fetch_step_id_, target);
  }

  // bool disable_rpc_logging = 4;
  if (this->disable_rpc_logging() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->disable_rpc_logging(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.LoggingRequest)
  return target;
}

size_t LoggingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.LoggingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 fetch_step_id = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->fetch_step_id_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fetch_step_id_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool enable_rpc_logging = 1;
  if (this->enable_rpc_logging() != 0) {
    total_size += 1 + 1;
  }

  // bool disable_rpc_logging = 4;
  if (this->disable_rpc_logging() != 0) {
    total_size += 1 + 1;
  }

  // bool clear = 2;
  if (this->clear() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoggingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.LoggingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoggingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoggingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.LoggingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.LoggingRequest)
    MergeFrom(*source);
  }
}

void LoggingRequest::MergeFrom(const LoggingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.LoggingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fetch_step_id_.MergeFrom(from.fetch_step_id_);
  if (from.enable_rpc_logging() != 0) {
    set_enable_rpc_logging(from.enable_rpc_logging());
  }
  if (from.disable_rpc_logging() != 0) {
    set_disable_rpc_logging(from.disable_rpc_logging());
  }
  if (from.clear() != 0) {
    set_clear(from.clear());
  }
}

void LoggingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.LoggingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoggingRequest::CopyFrom(const LoggingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.LoggingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoggingRequest::IsInitialized() const {
  return true;
}

void LoggingRequest::Swap(LoggingRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LoggingRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LoggingRequest::UnsafeArenaSwap(LoggingRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LoggingRequest::InternalSwap(LoggingRequest* other) {
  using std::swap;
  fetch_step_id_.InternalSwap(&other->fetch_step_id_);
  swap(enable_rpc_logging_, other->enable_rpc_logging_);
  swap(disable_rpc_logging_, other->disable_rpc_logging_);
  swap(clear_, other->clear_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoggingRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LabeledStepStats::InitAsDefaultInstance() {
  ::tensorflow::_LabeledStepStats_default_instance_._instance.get_mutable()->step_stats_ = const_cast< ::tensorflow::StepStats*>(
      ::tensorflow::StepStats::internal_default_instance());
}
void LabeledStepStats::unsafe_arena_set_allocated_step_stats(
    ::tensorflow::StepStats* step_stats) {
  if (GetArenaNoVirtual() == NULL) {
    delete step_stats_;
  }
  step_stats_ = step_stats;
  if (step_stats) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.LabeledStepStats.step_stats)
}
void LabeledStepStats::clear_step_stats() {
  if (GetArenaNoVirtual() == NULL && step_stats_ != NULL) {
    delete step_stats_;
  }
  step_stats_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LabeledStepStats::kStepIdFieldNumber;
const int LabeledStepStats::kStepStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LabeledStepStats::LabeledStepStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_LabeledStepStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.LabeledStepStats)
}
LabeledStepStats::LabeledStepStats(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_LabeledStepStats.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.LabeledStepStats)
}
LabeledStepStats::LabeledStepStats(const LabeledStepStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_step_stats()) {
    step_stats_ = new ::tensorflow::StepStats(*from.step_stats_);
  } else {
    step_stats_ = NULL;
  }
  step_id_ = from.step_id_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.LabeledStepStats)
}

void LabeledStepStats::SharedCtor() {
  ::memset(&step_stats_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&step_id_) -
      reinterpret_cast<char*>(&step_stats_)) + sizeof(step_id_));
}

LabeledStepStats::~LabeledStepStats() {
  // @@protoc_insertion_point(destructor:tensorflow.LabeledStepStats)
  SharedDtor();
}

void LabeledStepStats::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete step_stats_;
}

void LabeledStepStats::ArenaDtor(void* object) {
  LabeledStepStats* _this = reinterpret_cast< LabeledStepStats* >(object);
  (void)_this;
}
void LabeledStepStats::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LabeledStepStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LabeledStepStats::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LabeledStepStats& LabeledStepStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_LabeledStepStats.base);
  return *internal_default_instance();
}


void LabeledStepStats::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.LabeledStepStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && step_stats_ != NULL) {
    delete step_stats_;
  }
  step_stats_ = NULL;
  step_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool LabeledStepStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.LabeledStepStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 step_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &step_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.StepStats step_stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_step_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.LabeledStepStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.LabeledStepStats)
  return false;
#undef DO_
}

void LabeledStepStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.LabeledStepStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 step_id = 1;
  if (this->step_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->step_id(), output);
  }

  // .tensorflow.StepStats step_stats = 2;
  if (this->has_step_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_step_stats(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.LabeledStepStats)
}

::google::protobuf::uint8* LabeledStepStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.LabeledStepStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 step_id = 1;
  if (this->step_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->step_id(), target);
  }

  // .tensorflow.StepStats step_stats = 2;
  if (this->has_step_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_step_stats(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.LabeledStepStats)
  return target;
}

size_t LabeledStepStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.LabeledStepStats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.StepStats step_stats = 2;
  if (this->has_step_stats()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *step_stats_);
  }

  // int64 step_id = 1;
  if (this->step_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->step_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LabeledStepStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.LabeledStepStats)
  GOOGLE_DCHECK_NE(&from, this);
  const LabeledStepStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LabeledStepStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.LabeledStepStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.LabeledStepStats)
    MergeFrom(*source);
  }
}

void LabeledStepStats::MergeFrom(const LabeledStepStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.LabeledStepStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_step_stats()) {
    mutable_step_stats()->::tensorflow::StepStats::MergeFrom(from.step_stats());
  }
  if (from.step_id() != 0) {
    set_step_id(from.step_id());
  }
}

void LabeledStepStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.LabeledStepStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LabeledStepStats::CopyFrom(const LabeledStepStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.LabeledStepStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LabeledStepStats::IsInitialized() const {
  return true;
}

void LabeledStepStats::Swap(LabeledStepStats* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LabeledStepStats* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LabeledStepStats::UnsafeArenaSwap(LabeledStepStats* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LabeledStepStats::InternalSwap(LabeledStepStats* other) {
  using std::swap;
  swap(step_stats_, other->step_stats_);
  swap(step_id_, other->step_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LabeledStepStats::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoggingResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoggingResponse::kStepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoggingResponse::LoggingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_LoggingResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.LoggingResponse)
}
LoggingResponse::LoggingResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  step_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_LoggingResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.LoggingResponse)
}
LoggingResponse::LoggingResponse(const LoggingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      step_(from.step_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.LoggingResponse)
}

void LoggingResponse::SharedCtor() {
}

LoggingResponse::~LoggingResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.LoggingResponse)
  SharedDtor();
}

void LoggingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void LoggingResponse::ArenaDtor(void* object) {
  LoggingResponse* _this = reinterpret_cast< LoggingResponse* >(object);
  (void)_this;
}
void LoggingResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LoggingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoggingResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoggingResponse& LoggingResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_LoggingResponse.base);
  return *internal_default_instance();
}


void LoggingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.LoggingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  step_.Clear();
  _internal_metadata_.Clear();
}

bool LoggingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.LoggingResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.LabeledStepStats step = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_step()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.LoggingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.LoggingResponse)
  return false;
#undef DO_
}

void LoggingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.LoggingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.LabeledStepStats step = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->step_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->step(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.LoggingResponse)
}

::google::protobuf::uint8* LoggingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.LoggingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.LabeledStepStats step = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->step_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->step(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.LoggingResponse)
  return target;
}

size_t LoggingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.LoggingResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.LabeledStepStats step = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->step_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->step(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoggingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.LoggingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoggingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoggingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.LoggingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.LoggingResponse)
    MergeFrom(*source);
  }
}

void LoggingResponse::MergeFrom(const LoggingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.LoggingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  step_.MergeFrom(from.step_);
}

void LoggingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.LoggingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoggingResponse::CopyFrom(const LoggingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.LoggingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoggingResponse::IsInitialized() const {
  return true;
}

void LoggingResponse::Swap(LoggingResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LoggingResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LoggingResponse::UnsafeArenaSwap(LoggingResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LoggingResponse::InternalSwap(LoggingResponse* other) {
  using std::swap;
  CastToBase(&step_)->InternalSwap(CastToBase(&other->step_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoggingResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TraceOpts::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceOpts::kDurationFieldNumber;
const int TraceOpts::kUseStepProfilerFieldNumber;
const int TraceOpts::kUseKernelProfilerFieldNumber;
const int TraceOpts::kUseExtendedProfilerFieldNumber;
const int TraceOpts::kUseGpuProfilerFieldNumber;
const int TraceOpts::kUseSampleProfilerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceOpts::TraceOpts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_TraceOpts.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.TraceOpts)
}
TraceOpts::TraceOpts(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_TraceOpts.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.TraceOpts)
}
TraceOpts::TraceOpts(const TraceOpts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&duration_, &from.duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_sample_profiler_) -
    reinterpret_cast<char*>(&duration_)) + sizeof(use_sample_profiler_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.TraceOpts)
}

void TraceOpts::SharedCtor() {
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_sample_profiler_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(use_sample_profiler_));
}

TraceOpts::~TraceOpts() {
  // @@protoc_insertion_point(destructor:tensorflow.TraceOpts)
  SharedDtor();
}

void TraceOpts::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void TraceOpts::ArenaDtor(void* object) {
  TraceOpts* _this = reinterpret_cast< TraceOpts* >(object);
  (void)_this;
}
void TraceOpts::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TraceOpts::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TraceOpts::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TraceOpts& TraceOpts::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_TraceOpts.base);
  return *internal_default_instance();
}


void TraceOpts::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.TraceOpts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_sample_profiler_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(use_sample_profiler_));
  _internal_metadata_.Clear();
}

bool TraceOpts::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.TraceOpts)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double duration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_step_profiler = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_step_profiler_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_kernel_profiler = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_kernel_profiler_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_extended_profiler = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_extended_profiler_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_gpu_profiler = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_gpu_profiler_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_sample_profiler = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_sample_profiler_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.TraceOpts)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.TraceOpts)
  return false;
#undef DO_
}

void TraceOpts::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.TraceOpts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double duration = 1;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->duration(), output);
  }

  // bool use_step_profiler = 2;
  if (this->use_step_profiler() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->use_step_profiler(), output);
  }

  // bool use_kernel_profiler = 3;
  if (this->use_kernel_profiler() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->use_kernel_profiler(), output);
  }

  // bool use_extended_profiler = 4;
  if (this->use_extended_profiler() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->use_extended_profiler(), output);
  }

  // bool use_gpu_profiler = 5;
  if (this->use_gpu_profiler() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->use_gpu_profiler(), output);
  }

  // bool use_sample_profiler = 6;
  if (this->use_sample_profiler() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->use_sample_profiler(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.TraceOpts)
}

::google::protobuf::uint8* TraceOpts::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.TraceOpts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double duration = 1;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->duration(), target);
  }

  // bool use_step_profiler = 2;
  if (this->use_step_profiler() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->use_step_profiler(), target);
  }

  // bool use_kernel_profiler = 3;
  if (this->use_kernel_profiler() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->use_kernel_profiler(), target);
  }

  // bool use_extended_profiler = 4;
  if (this->use_extended_profiler() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->use_extended_profiler(), target);
  }

  // bool use_gpu_profiler = 5;
  if (this->use_gpu_profiler() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->use_gpu_profiler(), target);
  }

  // bool use_sample_profiler = 6;
  if (this->use_sample_profiler() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->use_sample_profiler(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.TraceOpts)
  return target;
}

size_t TraceOpts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.TraceOpts)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double duration = 1;
  if (this->duration() != 0) {
    total_size += 1 + 8;
  }

  // bool use_step_profiler = 2;
  if (this->use_step_profiler() != 0) {
    total_size += 1 + 1;
  }

  // bool use_kernel_profiler = 3;
  if (this->use_kernel_profiler() != 0) {
    total_size += 1 + 1;
  }

  // bool use_extended_profiler = 4;
  if (this->use_extended_profiler() != 0) {
    total_size += 1 + 1;
  }

  // bool use_gpu_profiler = 5;
  if (this->use_gpu_profiler() != 0) {
    total_size += 1 + 1;
  }

  // bool use_sample_profiler = 6;
  if (this->use_sample_profiler() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraceOpts::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.TraceOpts)
  GOOGLE_DCHECK_NE(&from, this);
  const TraceOpts* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TraceOpts>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.TraceOpts)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.TraceOpts)
    MergeFrom(*source);
  }
}

void TraceOpts::MergeFrom(const TraceOpts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.TraceOpts)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.use_step_profiler() != 0) {
    set_use_step_profiler(from.use_step_profiler());
  }
  if (from.use_kernel_profiler() != 0) {
    set_use_kernel_profiler(from.use_kernel_profiler());
  }
  if (from.use_extended_profiler() != 0) {
    set_use_extended_profiler(from.use_extended_profiler());
  }
  if (from.use_gpu_profiler() != 0) {
    set_use_gpu_profiler(from.use_gpu_profiler());
  }
  if (from.use_sample_profiler() != 0) {
    set_use_sample_profiler(from.use_sample_profiler());
  }
}

void TraceOpts::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.TraceOpts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TraceOpts::CopyFrom(const TraceOpts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.TraceOpts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceOpts::IsInitialized() const {
  return true;
}

void TraceOpts::Swap(TraceOpts* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TraceOpts* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TraceOpts::UnsafeArenaSwap(TraceOpts* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TraceOpts::InternalSwap(TraceOpts* other) {
  using std::swap;
  swap(duration_, other->duration_);
  swap(use_step_profiler_, other->use_step_profiler_);
  swap(use_kernel_profiler_, other->use_kernel_profiler_);
  swap(use_extended_profiler_, other->use_extended_profiler_);
  swap(use_gpu_profiler_, other->use_gpu_profiler_);
  swap(use_sample_profiler_, other->use_sample_profiler_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TraceOpts::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TracingRequest::InitAsDefaultInstance() {
  ::tensorflow::_TracingRequest_default_instance_._instance.get_mutable()->options_ = const_cast< ::tensorflow::TraceOpts*>(
      ::tensorflow::TraceOpts::internal_default_instance());
}
void TracingRequest::unsafe_arena_set_allocated_options(
    ::tensorflow::TraceOpts* options) {
  if (GetArenaNoVirtual() == NULL) {
    delete options_;
  }
  options_ = options;
  if (options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.TracingRequest.options)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TracingRequest::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TracingRequest::TracingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_TracingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.TracingRequest)
}
TracingRequest::TracingRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_TracingRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.TracingRequest)
}
TracingRequest::TracingRequest(const TracingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_options()) {
    options_ = new ::tensorflow::TraceOpts(*from.options_);
  } else {
    options_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.TracingRequest)
}

void TracingRequest::SharedCtor() {
  options_ = NULL;
}

TracingRequest::~TracingRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.TracingRequest)
  SharedDtor();
}

void TracingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete options_;
}

void TracingRequest::ArenaDtor(void* object) {
  TracingRequest* _this = reinterpret_cast< TracingRequest* >(object);
  (void)_this;
}
void TracingRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TracingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TracingRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TracingRequest& TracingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_TracingRequest.base);
  return *internal_default_instance();
}


void TracingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.TracingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && options_ != NULL) {
    delete options_;
  }
  options_ = NULL;
  _internal_metadata_.Clear();
}

bool TracingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.TracingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.TraceOpts options = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.TracingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.TracingRequest)
  return false;
#undef DO_
}

void TracingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.TracingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.TraceOpts options = 1;
  if (this->has_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_options(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.TracingRequest)
}

::google::protobuf::uint8* TracingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.TracingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.TraceOpts options = 1;
  if (this->has_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_options(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.TracingRequest)
  return target;
}

size_t TracingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.TracingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tensorflow.TraceOpts options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *options_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TracingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.TracingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TracingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TracingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.TracingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.TracingRequest)
    MergeFrom(*source);
  }
}

void TracingRequest::MergeFrom(const TracingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.TracingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    mutable_options()->::tensorflow::TraceOpts::MergeFrom(from.options());
  }
}

void TracingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.TracingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TracingRequest::CopyFrom(const TracingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.TracingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TracingRequest::IsInitialized() const {
  return true;
}

void TracingRequest::Swap(TracingRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TracingRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TracingRequest::UnsafeArenaSwap(TracingRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TracingRequest::InternalSwap(TracingRequest* other) {
  using std::swap;
  swap(options_, other->options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TracingRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TracingResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TracingResponse::TracingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_TracingResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.TracingResponse)
}
TracingResponse::TracingResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_TracingResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.TracingResponse)
}
TracingResponse::TracingResponse(const TracingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.TracingResponse)
}

void TracingResponse::SharedCtor() {
}

TracingResponse::~TracingResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.TracingResponse)
  SharedDtor();
}

void TracingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void TracingResponse::ArenaDtor(void* object) {
  TracingResponse* _this = reinterpret_cast< TracingResponse* >(object);
  (void)_this;
}
void TracingResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TracingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TracingResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TracingResponse& TracingResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_TracingResponse.base);
  return *internal_default_instance();
}


void TracingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.TracingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TracingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.TracingResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.TracingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.TracingResponse)
  return false;
#undef DO_
}

void TracingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.TracingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.TracingResponse)
}

::google::protobuf::uint8* TracingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.TracingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.TracingResponse)
  return target;
}

size_t TracingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.TracingResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TracingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.TracingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TracingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TracingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.TracingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.TracingResponse)
    MergeFrom(*source);
  }
}

void TracingResponse::MergeFrom(const TracingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.TracingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TracingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.TracingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TracingResponse::CopyFrom(const TracingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.TracingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TracingResponse::IsInitialized() const {
  return true;
}

void TracingResponse::Swap(TracingResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TracingResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TracingResponse::UnsafeArenaSwap(TracingResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TracingResponse::InternalSwap(TracingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TracingResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecvBufRequest::InitAsDefaultInstance() {
  ::tensorflow::_RecvBufRequest_default_instance_._instance.get_mutable()->client_locality_ = const_cast< ::tensorflow::DeviceLocality*>(
      ::tensorflow::DeviceLocality::internal_default_instance());
  ::tensorflow::_RecvBufRequest_default_instance_._instance.get_mutable()->server_locality_ = const_cast< ::tensorflow::DeviceLocality*>(
      ::tensorflow::DeviceLocality::internal_default_instance());
  ::tensorflow::_RecvBufRequest_default_instance_._instance.get_mutable()->transport_options_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void RecvBufRequest::unsafe_arena_set_allocated_client_locality(
    ::tensorflow::DeviceLocality* client_locality) {
  if (GetArenaNoVirtual() == NULL) {
    delete client_locality_;
  }
  client_locality_ = client_locality;
  if (client_locality) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvBufRequest.client_locality)
}
void RecvBufRequest::clear_client_locality() {
  if (GetArenaNoVirtual() == NULL && client_locality_ != NULL) {
    delete client_locality_;
  }
  client_locality_ = NULL;
}
void RecvBufRequest::unsafe_arena_set_allocated_server_locality(
    ::tensorflow::DeviceLocality* server_locality) {
  if (GetArenaNoVirtual() == NULL) {
    delete server_locality_;
  }
  server_locality_ = server_locality;
  if (server_locality) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvBufRequest.server_locality)
}
void RecvBufRequest::clear_server_locality() {
  if (GetArenaNoVirtual() == NULL && server_locality_ != NULL) {
    delete server_locality_;
  }
  server_locality_ = NULL;
}
void RecvBufRequest::unsafe_arena_set_allocated_transport_options(
    ::google::protobuf::Any* transport_options) {
  if (GetArenaNoVirtual() == NULL) {
    delete transport_options_;
  }
  transport_options_ = transport_options;
  if (transport_options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvBufRequest.transport_options)
}
void RecvBufRequest::clear_transport_options() {
  if (GetArenaNoVirtual() == NULL && transport_options_ != NULL) {
    delete transport_options_;
  }
  transport_options_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecvBufRequest::kStepIdFieldNumber;
const int RecvBufRequest::kBufRendezvousKeyFieldNumber;
const int RecvBufRequest::kNumBytesFieldNumber;
const int RecvBufRequest::kBufPtrFieldNumber;
const int RecvBufRequest::kClientLocalityFieldNumber;
const int RecvBufRequest::kServerLocalityFieldNumber;
const int RecvBufRequest::kTransportOptionsFieldNumber;
const int RecvBufRequest::kSrcDeviceFieldNumber;
const int RecvBufRequest::kDstDeviceFieldNumber;
const int RecvBufRequest::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecvBufRequest::RecvBufRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RecvBufRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.RecvBufRequest)
}
RecvBufRequest::RecvBufRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RecvBufRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.RecvBufRequest)
}
RecvBufRequest::RecvBufRequest(const RecvBufRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  buf_rendezvous_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buf_rendezvous_key().size() > 0) {
    buf_rendezvous_key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buf_rendezvous_key(),
      GetArenaNoVirtual());
  }
  src_device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.src_device().size() > 0) {
    src_device_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_device(),
      GetArenaNoVirtual());
  }
  dst_device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dst_device().size() > 0) {
    dst_device_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_device(),
      GetArenaNoVirtual());
  }
  if (from.has_client_locality()) {
    client_locality_ = new ::tensorflow::DeviceLocality(*from.client_locality_);
  } else {
    client_locality_ = NULL;
  }
  if (from.has_server_locality()) {
    server_locality_ = new ::tensorflow::DeviceLocality(*from.server_locality_);
  } else {
    server_locality_ = NULL;
  }
  if (from.has_transport_options()) {
    transport_options_ = new ::google::protobuf::Any(*from.transport_options_);
  } else {
    transport_options_ = NULL;
  }
  ::memcpy(&step_id_, &from.step_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
    reinterpret_cast<char*>(&step_id_)) + sizeof(request_id_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.RecvBufRequest)
}

void RecvBufRequest::SharedCtor() {
  buf_rendezvous_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&client_locality_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&client_locality_)) + sizeof(request_id_));
}

RecvBufRequest::~RecvBufRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.RecvBufRequest)
  SharedDtor();
}

void RecvBufRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  buf_rendezvous_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_device_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_device_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete client_locality_;
  if (this != internal_default_instance()) delete server_locality_;
  if (this != internal_default_instance()) delete transport_options_;
}

void RecvBufRequest::ArenaDtor(void* object) {
  RecvBufRequest* _this = reinterpret_cast< RecvBufRequest* >(object);
  (void)_this;
}
void RecvBufRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RecvBufRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RecvBufRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecvBufRequest& RecvBufRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RecvBufRequest.base);
  return *internal_default_instance();
}


void RecvBufRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.RecvBufRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buf_rendezvous_key_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  src_device_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  dst_device_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && client_locality_ != NULL) {
    delete client_locality_;
  }
  client_locality_ = NULL;
  if (GetArenaNoVirtual() == NULL && server_locality_ != NULL) {
    delete server_locality_;
  }
  server_locality_ = NULL;
  if (GetArenaNoVirtual() == NULL && transport_options_ != NULL) {
    delete transport_options_;
  }
  transport_options_ = NULL;
  ::memset(&step_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&step_id_)) + sizeof(request_id_));
  _internal_metadata_.Clear();
}

bool RecvBufRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.RecvBufRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 step_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &step_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string buf_rendezvous_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buf_rendezvous_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buf_rendezvous_key().data(), static_cast<int>(this->buf_rendezvous_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.RecvBufRequest.buf_rendezvous_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 num_bytes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 buf_ptr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &buf_ptr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.DeviceLocality client_locality = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_locality()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.DeviceLocality server_locality = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server_locality()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any transport_options = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transport_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string src_device = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src_device()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->src_device().data(), static_cast<int>(this->src_device().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.RecvBufRequest.src_device"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dst_device = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dst_device()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dst_device().data(), static_cast<int>(this->dst_device().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.RecvBufRequest.dst_device"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 request_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.RecvBufRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.RecvBufRequest)
  return false;
#undef DO_
}

void RecvBufRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.RecvBufRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 step_id = 1;
  if (this->step_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->step_id(), output);
  }

  // string buf_rendezvous_key = 2;
  if (this->buf_rendezvous_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buf_rendezvous_key().data(), static_cast<int>(this->buf_rendezvous_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RecvBufRequest.buf_rendezvous_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->buf_rendezvous_key(), output);
  }

  // int64 num_bytes = 3;
  if (this->num_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->num_bytes(), output);
  }

  // fixed64 buf_ptr = 4;
  if (this->buf_ptr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->buf_ptr(), output);
  }

  // .tensorflow.DeviceLocality client_locality = 5;
  if (this->has_client_locality()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_client_locality(), output);
  }

  // .tensorflow.DeviceLocality server_locality = 6;
  if (this->has_server_locality()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_server_locality(), output);
  }

  // .google.protobuf.Any transport_options = 7;
  if (this->has_transport_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_transport_options(), output);
  }

  // string src_device = 8;
  if (this->src_device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->src_device().data(), static_cast<int>(this->src_device().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RecvBufRequest.src_device");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->src_device(), output);
  }

  // string dst_device = 9;
  if (this->dst_device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dst_device().data(), static_cast<int>(this->dst_device().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RecvBufRequest.dst_device");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->dst_device(), output);
  }

  // int64 request_id = 10;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->request_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.RecvBufRequest)
}

::google::protobuf::uint8* RecvBufRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.RecvBufRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 step_id = 1;
  if (this->step_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->step_id(), target);
  }

  // string buf_rendezvous_key = 2;
  if (this->buf_rendezvous_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buf_rendezvous_key().data(), static_cast<int>(this->buf_rendezvous_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RecvBufRequest.buf_rendezvous_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->buf_rendezvous_key(), target);
  }

  // int64 num_bytes = 3;
  if (this->num_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->num_bytes(), target);
  }

  // fixed64 buf_ptr = 4;
  if (this->buf_ptr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->buf_ptr(), target);
  }

  // .tensorflow.DeviceLocality client_locality = 5;
  if (this->has_client_locality()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_client_locality(), deterministic, target);
  }

  // .tensorflow.DeviceLocality server_locality = 6;
  if (this->has_server_locality()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_server_locality(), deterministic, target);
  }

  // .google.protobuf.Any transport_options = 7;
  if (this->has_transport_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_transport_options(), deterministic, target);
  }

  // string src_device = 8;
  if (this->src_device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->src_device().data(), static_cast<int>(this->src_device().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RecvBufRequest.src_device");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->src_device(), target);
  }

  // string dst_device = 9;
  if (this->dst_device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dst_device().data(), static_cast<int>(this->dst_device().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.RecvBufRequest.dst_device");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->dst_device(), target);
  }

  // int64 request_id = 10;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->request_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.RecvBufRequest)
  return target;
}

size_t RecvBufRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.RecvBufRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string buf_rendezvous_key = 2;
  if (this->buf_rendezvous_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buf_rendezvous_key());
  }

  // string src_device = 8;
  if (this->src_device().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src_device());
  }

  // string dst_device = 9;
  if (this->dst_device().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dst_device());
  }

  // .tensorflow.DeviceLocality client_locality = 5;
  if (this->has_client_locality()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_locality_);
  }

  // .tensorflow.DeviceLocality server_locality = 6;
  if (this->has_server_locality()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *server_locality_);
  }

  // .google.protobuf.Any transport_options = 7;
  if (this->has_transport_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transport_options_);
  }

  // int64 step_id = 1;
  if (this->step_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->step_id());
  }

  // int64 num_bytes = 3;
  if (this->num_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->num_bytes());
  }

  // fixed64 buf_ptr = 4;
  if (this->buf_ptr() != 0) {
    total_size += 1 + 8;
  }

  // int64 request_id = 10;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->request_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecvBufRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.RecvBufRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RecvBufRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecvBufRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.RecvBufRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.RecvBufRequest)
    MergeFrom(*source);
  }
}

void RecvBufRequest::MergeFrom(const RecvBufRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.RecvBufRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.buf_rendezvous_key().size() > 0) {
    set_buf_rendezvous_key(from.buf_rendezvous_key());
  }
  if (from.src_device().size() > 0) {
    set_src_device(from.src_device());
  }
  if (from.dst_device().size() > 0) {
    set_dst_device(from.dst_device());
  }
  if (from.has_client_locality()) {
    mutable_client_locality()->::tensorflow::DeviceLocality::MergeFrom(from.client_locality());
  }
  if (from.has_server_locality()) {
    mutable_server_locality()->::tensorflow::DeviceLocality::MergeFrom(from.server_locality());
  }
  if (from.has_transport_options()) {
    mutable_transport_options()->::google::protobuf::Any::MergeFrom(from.transport_options());
  }
  if (from.step_id() != 0) {
    set_step_id(from.step_id());
  }
  if (from.num_bytes() != 0) {
    set_num_bytes(from.num_bytes());
  }
  if (from.buf_ptr() != 0) {
    set_buf_ptr(from.buf_ptr());
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
}

void RecvBufRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.RecvBufRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecvBufRequest::CopyFrom(const RecvBufRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.RecvBufRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecvBufRequest::IsInitialized() const {
  return true;
}

void RecvBufRequest::Swap(RecvBufRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RecvBufRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RecvBufRequest::UnsafeArenaSwap(RecvBufRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RecvBufRequest::InternalSwap(RecvBufRequest* other) {
  using std::swap;
  buf_rendezvous_key_.Swap(&other->buf_rendezvous_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  src_device_.Swap(&other->src_device_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dst_device_.Swap(&other->dst_device_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(client_locality_, other->client_locality_);
  swap(server_locality_, other->server_locality_);
  swap(transport_options_, other->transport_options_);
  swap(step_id_, other->step_id_);
  swap(num_bytes_, other->num_bytes_);
  swap(buf_ptr_, other->buf_ptr_);
  swap(request_id_, other->request_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecvBufRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecvBufResponse::InitAsDefaultInstance() {
  ::tensorflow::_RecvBufResponse_default_instance_._instance.get_mutable()->transport_options_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void RecvBufResponse::unsafe_arena_set_allocated_transport_options(
    ::google::protobuf::Any* transport_options) {
  if (GetArenaNoVirtual() == NULL) {
    delete transport_options_;
  }
  transport_options_ = transport_options;
  if (transport_options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RecvBufResponse.transport_options)
}
void RecvBufResponse::clear_transport_options() {
  if (GetArenaNoVirtual() == NULL && transport_options_ != NULL) {
    delete transport_options_;
  }
  transport_options_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecvBufResponse::kBufPtrFieldNumber;
const int RecvBufResponse::kNumBytesFieldNumber;
const int RecvBufResponse::kIsDeadFieldNumber;
const int RecvBufResponse::kTransportOptionsFieldNumber;
const int RecvBufResponse::kSendStartMicrosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecvBufResponse::RecvBufResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RecvBufResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.RecvBufResponse)
}
RecvBufResponse::RecvBufResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RecvBufResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.RecvBufResponse)
}
RecvBufResponse::RecvBufResponse(const RecvBufResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_transport_options()) {
    transport_options_ = new ::google::protobuf::Any(*from.transport_options_);
  } else {
    transport_options_ = NULL;
  }
  ::memcpy(&buf_ptr_, &from.buf_ptr_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_dead_) -
    reinterpret_cast<char*>(&buf_ptr_)) + sizeof(is_dead_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.RecvBufResponse)
}

void RecvBufResponse::SharedCtor() {
  ::memset(&transport_options_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_dead_) -
      reinterpret_cast<char*>(&transport_options_)) + sizeof(is_dead_));
}

RecvBufResponse::~RecvBufResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.RecvBufResponse)
  SharedDtor();
}

void RecvBufResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete transport_options_;
}

void RecvBufResponse::ArenaDtor(void* object) {
  RecvBufResponse* _this = reinterpret_cast< RecvBufResponse* >(object);
  (void)_this;
}
void RecvBufResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RecvBufResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RecvBufResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecvBufResponse& RecvBufResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_RecvBufResponse.base);
  return *internal_default_instance();
}


void RecvBufResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.RecvBufResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && transport_options_ != NULL) {
    delete transport_options_;
  }
  transport_options_ = NULL;
  ::memset(&buf_ptr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_dead_) -
      reinterpret_cast<char*>(&buf_ptr_)) + sizeof(is_dead_));
  _internal_metadata_.Clear();
}

bool RecvBufResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.RecvBufResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 buf_ptr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &buf_ptr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 num_bytes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_dead = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_dead_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any transport_options = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transport_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 send_start_micros = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &send_start_micros_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.RecvBufResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.RecvBufResponse)
  return false;
#undef DO_
}

void RecvBufResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.RecvBufResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 buf_ptr = 1;
  if (this->buf_ptr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->buf_ptr(), output);
  }

  // int64 num_bytes = 2;
  if (this->num_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->num_bytes(), output);
  }

  // bool is_dead = 3;
  if (this->is_dead() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_dead(), output);
  }

  // .google.protobuf.Any transport_options = 4;
  if (this->has_transport_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_transport_options(), output);
  }

  // int64 send_start_micros = 5;
  if (this->send_start_micros() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->send_start_micros(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.RecvBufResponse)
}

::google::protobuf::uint8* RecvBufResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.RecvBufResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 buf_ptr = 1;
  if (this->buf_ptr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->buf_ptr(), target);
  }

  // int64 num_bytes = 2;
  if (this->num_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->num_bytes(), target);
  }

  // bool is_dead = 3;
  if (this->is_dead() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_dead(), target);
  }

  // .google.protobuf.Any transport_options = 4;
  if (this->has_transport_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_transport_options(), deterministic, target);
  }

  // int64 send_start_micros = 5;
  if (this->send_start_micros() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->send_start_micros(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.RecvBufResponse)
  return target;
}

size_t RecvBufResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.RecvBufResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Any transport_options = 4;
  if (this->has_transport_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transport_options_);
  }

  // fixed64 buf_ptr = 1;
  if (this->buf_ptr() != 0) {
    total_size += 1 + 8;
  }

  // int64 num_bytes = 2;
  if (this->num_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->num_bytes());
  }

  // int64 send_start_micros = 5;
  if (this->send_start_micros() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->send_start_micros());
  }

  // bool is_dead = 3;
  if (this->is_dead() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecvBufResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.RecvBufResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RecvBufResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecvBufResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.RecvBufResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.RecvBufResponse)
    MergeFrom(*source);
  }
}

void RecvBufResponse::MergeFrom(const RecvBufResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.RecvBufResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_transport_options()) {
    mutable_transport_options()->::google::protobuf::Any::MergeFrom(from.transport_options());
  }
  if (from.buf_ptr() != 0) {
    set_buf_ptr(from.buf_ptr());
  }
  if (from.num_bytes() != 0) {
    set_num_bytes(from.num_bytes());
  }
  if (from.send_start_micros() != 0) {
    set_send_start_micros(from.send_start_micros());
  }
  if (from.is_dead() != 0) {
    set_is_dead(from.is_dead());
  }
}

void RecvBufResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.RecvBufResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecvBufResponse::CopyFrom(const RecvBufResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.RecvBufResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecvBufResponse::IsInitialized() const {
  return true;
}

void RecvBufResponse::Swap(RecvBufResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RecvBufResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RecvBufResponse::UnsafeArenaSwap(RecvBufResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RecvBufResponse::InternalSwap(RecvBufResponse* other) {
  using std::swap;
  swap(transport_options_, other->transport_options_);
  swap(buf_ptr_, other->buf_ptr_);
  swap(num_bytes_, other->num_bytes_);
  swap(send_start_micros_, other->send_start_micros_);
  swap(is_dead_, other->is_dead_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecvBufResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompleteGroupRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompleteGroupRequest::kGroupKeyFieldNumber;
const int CompleteGroupRequest::kGroupSizeFieldNumber;
const int CompleteGroupRequest::kDeviceTypeFieldNumber;
const int CompleteGroupRequest::kDeviceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompleteGroupRequest::CompleteGroupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CompleteGroupRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CompleteGroupRequest)
}
CompleteGroupRequest::CompleteGroupRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  device_name_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CompleteGroupRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CompleteGroupRequest)
}
CompleteGroupRequest::CompleteGroupRequest(const CompleteGroupRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      device_name_(from.device_name_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_type().size() > 0) {
    device_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_type(),
      GetArenaNoVirtual());
  }
  ::memcpy(&group_key_, &from.group_key_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_size_) -
    reinterpret_cast<char*>(&group_key_)) + sizeof(group_size_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.CompleteGroupRequest)
}

void CompleteGroupRequest::SharedCtor() {
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_size_) -
      reinterpret_cast<char*>(&group_key_)) + sizeof(group_size_));
}

CompleteGroupRequest::~CompleteGroupRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.CompleteGroupRequest)
  SharedDtor();
}

void CompleteGroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  device_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CompleteGroupRequest::ArenaDtor(void* object) {
  CompleteGroupRequest* _this = reinterpret_cast< CompleteGroupRequest* >(object);
  (void)_this;
}
void CompleteGroupRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CompleteGroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CompleteGroupRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompleteGroupRequest& CompleteGroupRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CompleteGroupRequest.base);
  return *internal_default_instance();
}


void CompleteGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CompleteGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_name_.Clear();
  device_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&group_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_size_) -
      reinterpret_cast<char*>(&group_key_)) + sizeof(group_size_));
  _internal_metadata_.Clear();
}

bool CompleteGroupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CompleteGroupRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 group_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 group_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_type().data(), static_cast<int>(this->device_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CompleteGroupRequest.device_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string device_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_device_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_name(this->device_name_size() - 1).data(),
            static_cast<int>(this->device_name(this->device_name_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CompleteGroupRequest.device_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CompleteGroupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CompleteGroupRequest)
  return false;
#undef DO_
}

void CompleteGroupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CompleteGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_key = 1;
  if (this->group_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->group_key(), output);
  }

  // int32 group_size = 2;
  if (this->group_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->group_size(), output);
  }

  // string device_type = 3;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CompleteGroupRequest.device_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->device_type(), output);
  }

  // repeated string device_name = 4;
  for (int i = 0, n = this->device_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name(i).data(), static_cast<int>(this->device_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CompleteGroupRequest.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->device_name(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CompleteGroupRequest)
}

::google::protobuf::uint8* CompleteGroupRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CompleteGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_key = 1;
  if (this->group_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->group_key(), target);
  }

  // int32 group_size = 2;
  if (this->group_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->group_size(), target);
  }

  // string device_type = 3;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CompleteGroupRequest.device_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->device_type(), target);
  }

  // repeated string device_name = 4;
  for (int i = 0, n = this->device_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name(i).data(), static_cast<int>(this->device_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CompleteGroupRequest.device_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->device_name(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CompleteGroupRequest)
  return target;
}

size_t CompleteGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CompleteGroupRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string device_name = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->device_name_size());
  for (int i = 0, n = this->device_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->device_name(i));
  }

  // string device_type = 3;
  if (this->device_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_type());
  }

  // int32 group_key = 1;
  if (this->group_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_key());
  }

  // int32 group_size = 2;
  if (this->group_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompleteGroupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CompleteGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CompleteGroupRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompleteGroupRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CompleteGroupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CompleteGroupRequest)
    MergeFrom(*source);
  }
}

void CompleteGroupRequest::MergeFrom(const CompleteGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CompleteGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  device_name_.MergeFrom(from.device_name_);
  if (from.device_type().size() > 0) {
    set_device_type(from.device_type());
  }
  if (from.group_key() != 0) {
    set_group_key(from.group_key());
  }
  if (from.group_size() != 0) {
    set_group_size(from.group_size());
  }
}

void CompleteGroupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CompleteGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompleteGroupRequest::CopyFrom(const CompleteGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CompleteGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteGroupRequest::IsInitialized() const {
  return true;
}

void CompleteGroupRequest::Swap(CompleteGroupRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CompleteGroupRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CompleteGroupRequest::UnsafeArenaSwap(CompleteGroupRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CompleteGroupRequest::InternalSwap(CompleteGroupRequest* other) {
  using std::swap;
  device_name_.InternalSwap(CastToBase(&other->device_name_));
  device_type_.Swap(&other->device_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_key_, other->group_key_);
  swap(group_size_, other->group_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CompleteGroupRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompleteGroupResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompleteGroupResponse::kGroupKeyFieldNumber;
const int CompleteGroupResponse::kGroupSizeFieldNumber;
const int CompleteGroupResponse::kDeviceTypeFieldNumber;
const int CompleteGroupResponse::kNumTasksFieldNumber;
const int CompleteGroupResponse::kDeviceNameFieldNumber;
const int CompleteGroupResponse::kTaskNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompleteGroupResponse::CompleteGroupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CompleteGroupResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CompleteGroupResponse)
}
CompleteGroupResponse::CompleteGroupResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  device_name_(arena),
  task_name_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CompleteGroupResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CompleteGroupResponse)
}
CompleteGroupResponse::CompleteGroupResponse(const CompleteGroupResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      device_name_(from.device_name_),
      task_name_(from.task_name_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_type().size() > 0) {
    device_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_type(),
      GetArenaNoVirtual());
  }
  ::memcpy(&group_key_, &from.group_key_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_tasks_) -
    reinterpret_cast<char*>(&group_key_)) + sizeof(num_tasks_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.CompleteGroupResponse)
}

void CompleteGroupResponse::SharedCtor() {
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_tasks_) -
      reinterpret_cast<char*>(&group_key_)) + sizeof(num_tasks_));
}

CompleteGroupResponse::~CompleteGroupResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.CompleteGroupResponse)
  SharedDtor();
}

void CompleteGroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  device_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CompleteGroupResponse::ArenaDtor(void* object) {
  CompleteGroupResponse* _this = reinterpret_cast< CompleteGroupResponse* >(object);
  (void)_this;
}
void CompleteGroupResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CompleteGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CompleteGroupResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompleteGroupResponse& CompleteGroupResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CompleteGroupResponse.base);
  return *internal_default_instance();
}


void CompleteGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CompleteGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_name_.Clear();
  task_name_.Clear();
  device_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&group_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_tasks_) -
      reinterpret_cast<char*>(&group_key_)) + sizeof(num_tasks_));
  _internal_metadata_.Clear();
}

bool CompleteGroupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CompleteGroupResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 group_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 group_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_type().data(), static_cast<int>(this->device_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CompleteGroupResponse.device_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_tasks = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_tasks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string device_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_device_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_name(this->device_name_size() - 1).data(),
            static_cast<int>(this->device_name(this->device_name_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CompleteGroupResponse.device_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string task_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_task_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->task_name(this->task_name_size() - 1).data(),
            static_cast<int>(this->task_name(this->task_name_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CompleteGroupResponse.task_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CompleteGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CompleteGroupResponse)
  return false;
#undef DO_
}

void CompleteGroupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CompleteGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_key = 1;
  if (this->group_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->group_key(), output);
  }

  // int32 group_size = 2;
  if (this->group_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->group_size(), output);
  }

  // string device_type = 3;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CompleteGroupResponse.device_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->device_type(), output);
  }

  // int32 num_tasks = 4;
  if (this->num_tasks() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->num_tasks(), output);
  }

  // repeated string device_name = 5;
  for (int i = 0, n = this->device_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name(i).data(), static_cast<int>(this->device_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CompleteGroupResponse.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->device_name(i), output);
  }

  // repeated string task_name = 6;
  for (int i = 0, n = this->task_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_name(i).data(), static_cast<int>(this->task_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CompleteGroupResponse.task_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->task_name(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CompleteGroupResponse)
}

::google::protobuf::uint8* CompleteGroupResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CompleteGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_key = 1;
  if (this->group_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->group_key(), target);
  }

  // int32 group_size = 2;
  if (this->group_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->group_size(), target);
  }

  // string device_type = 3;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CompleteGroupResponse.device_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->device_type(), target);
  }

  // int32 num_tasks = 4;
  if (this->num_tasks() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->num_tasks(), target);
  }

  // repeated string device_name = 5;
  for (int i = 0, n = this->device_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name(i).data(), static_cast<int>(this->device_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CompleteGroupResponse.device_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->device_name(i), target);
  }

  // repeated string task_name = 6;
  for (int i = 0, n = this->task_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_name(i).data(), static_cast<int>(this->task_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CompleteGroupResponse.task_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->task_name(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CompleteGroupResponse)
  return target;
}

size_t CompleteGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CompleteGroupResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string device_name = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->device_name_size());
  for (int i = 0, n = this->device_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->device_name(i));
  }

  // repeated string task_name = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->task_name_size());
  for (int i = 0, n = this->task_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->task_name(i));
  }

  // string device_type = 3;
  if (this->device_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_type());
  }

  // int32 group_key = 1;
  if (this->group_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_key());
  }

  // int32 group_size = 2;
  if (this->group_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_size());
  }

  // int32 num_tasks = 4;
  if (this->num_tasks() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_tasks());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompleteGroupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CompleteGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CompleteGroupResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompleteGroupResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CompleteGroupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CompleteGroupResponse)
    MergeFrom(*source);
  }
}

void CompleteGroupResponse::MergeFrom(const CompleteGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CompleteGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  device_name_.MergeFrom(from.device_name_);
  task_name_.MergeFrom(from.task_name_);
  if (from.device_type().size() > 0) {
    set_device_type(from.device_type());
  }
  if (from.group_key() != 0) {
    set_group_key(from.group_key());
  }
  if (from.group_size() != 0) {
    set_group_size(from.group_size());
  }
  if (from.num_tasks() != 0) {
    set_num_tasks(from.num_tasks());
  }
}

void CompleteGroupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CompleteGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompleteGroupResponse::CopyFrom(const CompleteGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CompleteGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteGroupResponse::IsInitialized() const {
  return true;
}

void CompleteGroupResponse::Swap(CompleteGroupResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CompleteGroupResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CompleteGroupResponse::UnsafeArenaSwap(CompleteGroupResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CompleteGroupResponse::InternalSwap(CompleteGroupResponse* other) {
  using std::swap;
  device_name_.InternalSwap(CastToBase(&other->device_name_));
  task_name_.InternalSwap(CastToBase(&other->task_name_));
  device_type_.Swap(&other->device_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_key_, other->group_key_);
  swap(group_size_, other->group_size_);
  swap(num_tasks_, other->num_tasks_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CompleteGroupResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompleteInstanceRequest::InitAsDefaultInstance() {
  ::tensorflow::_CompleteInstanceRequest_default_instance_._instance.get_mutable()->shape_ = const_cast< ::tensorflow::TensorShapeProto*>(
      ::tensorflow::TensorShapeProto::internal_default_instance());
}
void CompleteInstanceRequest::unsafe_arena_set_allocated_shape(
    ::tensorflow::TensorShapeProto* shape) {
  if (GetArenaNoVirtual() == NULL) {
    delete shape_;
  }
  shape_ = shape;
  if (shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CompleteInstanceRequest.shape)
}
void CompleteInstanceRequest::clear_shape() {
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) {
    delete shape_;
  }
  shape_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompleteInstanceRequest::kNameFieldNumber;
const int CompleteInstanceRequest::kTypeFieldNumber;
const int CompleteInstanceRequest::kDataTypeFieldNumber;
const int CompleteInstanceRequest::kShapeFieldNumber;
const int CompleteInstanceRequest::kGroupKeyFieldNumber;
const int CompleteInstanceRequest::kGroupSizeFieldNumber;
const int CompleteInstanceRequest::kInstanceKeyFieldNumber;
const int CompleteInstanceRequest::kDeviceTypeFieldNumber;
const int CompleteInstanceRequest::kSubdivOffsetFieldNumber;
const int CompleteInstanceRequest::kDeviceFieldNumber;
const int CompleteInstanceRequest::kIsSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompleteInstanceRequest::CompleteInstanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CompleteInstanceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CompleteInstanceRequest)
}
CompleteInstanceRequest::CompleteInstanceRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  subdiv_offset_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CompleteInstanceRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CompleteInstanceRequest)
}
CompleteInstanceRequest::CompleteInstanceRequest(const CompleteInstanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      subdiv_offset_(from.subdiv_offset_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_type().size() > 0) {
    device_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_type(),
      GetArenaNoVirtual());
  }
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device().size() > 0) {
    device_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device(),
      GetArenaNoVirtual());
  }
  if (from.has_shape()) {
    shape_ = new ::tensorflow::TensorShapeProto(*from.shape_);
  } else {
    shape_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_source_) -
    reinterpret_cast<char*>(&type_)) + sizeof(is_source_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.CompleteInstanceRequest)
}

void CompleteInstanceRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shape_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_source_) -
      reinterpret_cast<char*>(&shape_)) + sizeof(is_source_));
}

CompleteInstanceRequest::~CompleteInstanceRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.CompleteInstanceRequest)
  SharedDtor();
}

void CompleteInstanceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete shape_;
}

void CompleteInstanceRequest::ArenaDtor(void* object) {
  CompleteInstanceRequest* _this = reinterpret_cast< CompleteInstanceRequest* >(object);
  (void)_this;
}
void CompleteInstanceRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CompleteInstanceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CompleteInstanceRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompleteInstanceRequest& CompleteInstanceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CompleteInstanceRequest.base);
  return *internal_default_instance();
}


void CompleteInstanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CompleteInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subdiv_offset_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  device_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  device_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) {
    delete shape_;
  }
  shape_ = NULL;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_source_) -
      reinterpret_cast<char*>(&type_)) + sizeof(is_source_));
  _internal_metadata_.Clear();
}

bool CompleteInstanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CompleteInstanceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CompleteInstanceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.DataType data_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_data_type(static_cast< ::tensorflow::DataType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.TensorShapeProto shape = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 group_key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 group_size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 instance_key = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instance_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_type().data(), static_cast<int>(this->device_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CompleteInstanceRequest.device_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 subdiv_offset = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_subdiv_offset())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74u, input, this->mutable_subdiv_offset())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device().data(), static_cast<int>(this->device().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CompleteInstanceRequest.device"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_source = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CompleteInstanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CompleteInstanceRequest)
  return false;
#undef DO_
}

void CompleteInstanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CompleteInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CompleteInstanceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // .tensorflow.DataType data_type = 3;
  if (this->data_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->data_type(), output);
  }

  // .tensorflow.TensorShapeProto shape = 4;
  if (this->has_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_shape(), output);
  }

  // int32 group_key = 5;
  if (this->group_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->group_key(), output);
  }

  // int32 group_size = 6;
  if (this->group_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->group_size(), output);
  }

  // int32 instance_key = 7;
  if (this->instance_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->instance_key(), output);
  }

  // string device_type = 8;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CompleteInstanceRequest.device_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->device_type(), output);
  }

  // repeated int32 subdiv_offset = 9;
  if (this->subdiv_offset_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _subdiv_offset_cached_byte_size_));
  }
  for (int i = 0, n = this->subdiv_offset_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->subdiv_offset(i), output);
  }

  // string device = 10;
  if (this->device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), static_cast<int>(this->device().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CompleteInstanceRequest.device");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->device(), output);
  }

  // bool is_source = 11;
  if (this->is_source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_source(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CompleteInstanceRequest)
}

::google::protobuf::uint8* CompleteInstanceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CompleteInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CompleteInstanceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // .tensorflow.DataType data_type = 3;
  if (this->data_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->data_type(), target);
  }

  // .tensorflow.TensorShapeProto shape = 4;
  if (this->has_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_shape(), deterministic, target);
  }

  // int32 group_key = 5;
  if (this->group_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->group_key(), target);
  }

  // int32 group_size = 6;
  if (this->group_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->group_size(), target);
  }

  // int32 instance_key = 7;
  if (this->instance_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->instance_key(), target);
  }

  // string device_type = 8;
  if (this->device_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_type().data(), static_cast<int>(this->device_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CompleteInstanceRequest.device_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->device_type(), target);
  }

  // repeated int32 subdiv_offset = 9;
  if (this->subdiv_offset_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _subdiv_offset_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->subdiv_offset_, target);
  }

  // string device = 10;
  if (this->device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), static_cast<int>(this->device().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CompleteInstanceRequest.device");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->device(), target);
  }

  // bool is_source = 11;
  if (this->is_source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_source(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CompleteInstanceRequest)
  return target;
}

size_t CompleteInstanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CompleteInstanceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 subdiv_offset = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->subdiv_offset_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _subdiv_offset_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string device_type = 8;
  if (this->device_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_type());
  }

  // string device = 10;
  if (this->device().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device());
  }

  // .tensorflow.TensorShapeProto shape = 4;
  if (this->has_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shape_);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // .tensorflow.DataType data_type = 3;
  if (this->data_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_type());
  }

  // int32 group_key = 5;
  if (this->group_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_key());
  }

  // int32 group_size = 6;
  if (this->group_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->group_size());
  }

  // int32 instance_key = 7;
  if (this->instance_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->instance_key());
  }

  // bool is_source = 11;
  if (this->is_source() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompleteInstanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CompleteInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CompleteInstanceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompleteInstanceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CompleteInstanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CompleteInstanceRequest)
    MergeFrom(*source);
  }
}

void CompleteInstanceRequest::MergeFrom(const CompleteInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CompleteInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subdiv_offset_.MergeFrom(from.subdiv_offset_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.device_type().size() > 0) {
    set_device_type(from.device_type());
  }
  if (from.device().size() > 0) {
    set_device(from.device());
  }
  if (from.has_shape()) {
    mutable_shape()->::tensorflow::TensorShapeProto::MergeFrom(from.shape());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.data_type() != 0) {
    set_data_type(from.data_type());
  }
  if (from.group_key() != 0) {
    set_group_key(from.group_key());
  }
  if (from.group_size() != 0) {
    set_group_size(from.group_size());
  }
  if (from.instance_key() != 0) {
    set_instance_key(from.instance_key());
  }
  if (from.is_source() != 0) {
    set_is_source(from.is_source());
  }
}

void CompleteInstanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CompleteInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompleteInstanceRequest::CopyFrom(const CompleteInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CompleteInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteInstanceRequest::IsInitialized() const {
  return true;
}

void CompleteInstanceRequest::Swap(CompleteInstanceRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CompleteInstanceRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CompleteInstanceRequest::UnsafeArenaSwap(CompleteInstanceRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CompleteInstanceRequest::InternalSwap(CompleteInstanceRequest* other) {
  using std::swap;
  subdiv_offset_.InternalSwap(&other->subdiv_offset_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_type_.Swap(&other->device_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_.Swap(&other->device_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(shape_, other->shape_);
  swap(type_, other->type_);
  swap(data_type_, other->data_type_);
  swap(group_key_, other->group_key_);
  swap(group_size_, other->group_size_);
  swap(instance_key_, other->instance_key_);
  swap(is_source_, other->is_source_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CompleteInstanceRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompleteInstanceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompleteInstanceResponse::kInstanceKeyFieldNumber;
const int CompleteInstanceResponse::kSourceRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompleteInstanceResponse::CompleteInstanceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CompleteInstanceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CompleteInstanceResponse)
}
CompleteInstanceResponse::CompleteInstanceResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CompleteInstanceResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CompleteInstanceResponse)
}
CompleteInstanceResponse::CompleteInstanceResponse(const CompleteInstanceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&instance_key_, &from.instance_key_,
    static_cast<size_t>(reinterpret_cast<char*>(&source_rank_) -
    reinterpret_cast<char*>(&instance_key_)) + sizeof(source_rank_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.CompleteInstanceResponse)
}

void CompleteInstanceResponse::SharedCtor() {
  ::memset(&instance_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_rank_) -
      reinterpret_cast<char*>(&instance_key_)) + sizeof(source_rank_));
}

CompleteInstanceResponse::~CompleteInstanceResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.CompleteInstanceResponse)
  SharedDtor();
}

void CompleteInstanceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void CompleteInstanceResponse::ArenaDtor(void* object) {
  CompleteInstanceResponse* _this = reinterpret_cast< CompleteInstanceResponse* >(object);
  (void)_this;
}
void CompleteInstanceResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CompleteInstanceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CompleteInstanceResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompleteInstanceResponse& CompleteInstanceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_CompleteInstanceResponse.base);
  return *internal_default_instance();
}


void CompleteInstanceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CompleteInstanceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&instance_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_rank_) -
      reinterpret_cast<char*>(&instance_key_)) + sizeof(source_rank_));
  _internal_metadata_.Clear();
}

bool CompleteInstanceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CompleteInstanceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 instance_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instance_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 source_rank = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CompleteInstanceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CompleteInstanceResponse)
  return false;
#undef DO_
}

void CompleteInstanceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CompleteInstanceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 instance_key = 1;
  if (this->instance_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->instance_key(), output);
  }

  // int32 source_rank = 2;
  if (this->source_rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->source_rank(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.CompleteInstanceResponse)
}

::google::protobuf::uint8* CompleteInstanceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CompleteInstanceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 instance_key = 1;
  if (this->instance_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->instance_key(), target);
  }

  // int32 source_rank = 2;
  if (this->source_rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->source_rank(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CompleteInstanceResponse)
  return target;
}

size_t CompleteInstanceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CompleteInstanceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 instance_key = 1;
  if (this->instance_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->instance_key());
  }

  // int32 source_rank = 2;
  if (this->source_rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->source_rank());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompleteInstanceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CompleteInstanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CompleteInstanceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompleteInstanceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CompleteInstanceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CompleteInstanceResponse)
    MergeFrom(*source);
  }
}

void CompleteInstanceResponse::MergeFrom(const CompleteInstanceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CompleteInstanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_key() != 0) {
    set_instance_key(from.instance_key());
  }
  if (from.source_rank() != 0) {
    set_source_rank(from.source_rank());
  }
}

void CompleteInstanceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CompleteInstanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompleteInstanceResponse::CopyFrom(const CompleteInstanceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CompleteInstanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteInstanceResponse::IsInitialized() const {
  return true;
}

void CompleteInstanceResponse::Swap(CompleteInstanceResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CompleteInstanceResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CompleteInstanceResponse::UnsafeArenaSwap(CompleteInstanceResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CompleteInstanceResponse::InternalSwap(CompleteInstanceResponse* other) {
  using std::swap;
  swap(instance_key_, other->instance_key_);
  swap(source_rank_, other->source_rank_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CompleteInstanceResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetStepSequenceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetStepSequenceRequest::kGraphKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetStepSequenceRequest::GetStepSequenceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_GetStepSequenceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.GetStepSequenceRequest)
}
GetStepSequenceRequest::GetStepSequenceRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  graph_key_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_GetStepSequenceRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GetStepSequenceRequest)
}
GetStepSequenceRequest::GetStepSequenceRequest(const GetStepSequenceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      graph_key_(from.graph_key_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.GetStepSequenceRequest)
}

void GetStepSequenceRequest::SharedCtor() {
}

GetStepSequenceRequest::~GetStepSequenceRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.GetStepSequenceRequest)
  SharedDtor();
}

void GetStepSequenceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GetStepSequenceRequest::ArenaDtor(void* object) {
  GetStepSequenceRequest* _this = reinterpret_cast< GetStepSequenceRequest* >(object);
  (void)_this;
}
void GetStepSequenceRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GetStepSequenceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetStepSequenceRequest::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetStepSequenceRequest& GetStepSequenceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_GetStepSequenceRequest.base);
  return *internal_default_instance();
}


void GetStepSequenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GetStepSequenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  graph_key_.Clear();
  _internal_metadata_.Clear();
}

bool GetStepSequenceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.GetStepSequenceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 graph_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_graph_key())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_graph_key())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.GetStepSequenceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.GetStepSequenceRequest)
  return false;
#undef DO_
}

void GetStepSequenceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.GetStepSequenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 graph_key = 1;
  if (this->graph_key_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _graph_key_cached_byte_size_));
  }
  for (int i = 0, n = this->graph_key_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->graph_key(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.GetStepSequenceRequest)
}

::google::protobuf::uint8* GetStepSequenceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GetStepSequenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 graph_key = 1;
  if (this->graph_key_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _graph_key_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->graph_key_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GetStepSequenceRequest)
  return target;
}

size_t GetStepSequenceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.GetStepSequenceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 graph_key = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->graph_key_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _graph_key_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStepSequenceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.GetStepSequenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStepSequenceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetStepSequenceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.GetStepSequenceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.GetStepSequenceRequest)
    MergeFrom(*source);
  }
}

void GetStepSequenceRequest::MergeFrom(const GetStepSequenceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GetStepSequenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  graph_key_.MergeFrom(from.graph_key_);
}

void GetStepSequenceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.GetStepSequenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStepSequenceRequest::CopyFrom(const GetStepSequenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GetStepSequenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStepSequenceRequest::IsInitialized() const {
  return true;
}

void GetStepSequenceRequest::Swap(GetStepSequenceRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetStepSequenceRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetStepSequenceRequest::UnsafeArenaSwap(GetStepSequenceRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetStepSequenceRequest::InternalSwap(GetStepSequenceRequest* other) {
  using std::swap;
  graph_key_.InternalSwap(&other->graph_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetStepSequenceRequest::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StepSequence::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StepSequence::kGraphKeyFieldNumber;
const int StepSequence::kNextStepIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StepSequence::StepSequence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_StepSequence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.StepSequence)
}
StepSequence::StepSequence(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_StepSequence.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.StepSequence)
}
StepSequence::StepSequence(const StepSequence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&graph_key_, &from.graph_key_,
    static_cast<size_t>(reinterpret_cast<char*>(&next_step_id_) -
    reinterpret_cast<char*>(&graph_key_)) + sizeof(next_step_id_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.StepSequence)
}

void StepSequence::SharedCtor() {
  ::memset(&graph_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&next_step_id_) -
      reinterpret_cast<char*>(&graph_key_)) + sizeof(next_step_id_));
}

StepSequence::~StepSequence() {
  // @@protoc_insertion_point(destructor:tensorflow.StepSequence)
  SharedDtor();
}

void StepSequence::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void StepSequence::ArenaDtor(void* object) {
  StepSequence* _this = reinterpret_cast< StepSequence* >(object);
  (void)_this;
}
void StepSequence::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void StepSequence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StepSequence::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StepSequence& StepSequence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_StepSequence.base);
  return *internal_default_instance();
}


void StepSequence::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.StepSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&graph_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&next_step_id_) -
      reinterpret_cast<char*>(&graph_key_)) + sizeof(next_step_id_));
  _internal_metadata_.Clear();
}

bool StepSequence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.StepSequence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 graph_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &graph_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 next_step_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &next_step_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.StepSequence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.StepSequence)
  return false;
#undef DO_
}

void StepSequence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.StepSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 graph_key = 1;
  if (this->graph_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->graph_key(), output);
  }

  // int64 next_step_id = 2;
  if (this->next_step_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->next_step_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.StepSequence)
}

::google::protobuf::uint8* StepSequence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.StepSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 graph_key = 1;
  if (this->graph_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->graph_key(), target);
  }

  // int64 next_step_id = 2;
  if (this->next_step_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->next_step_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.StepSequence)
  return target;
}

size_t StepSequence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.StepSequence)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 graph_key = 1;
  if (this->graph_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->graph_key());
  }

  // int64 next_step_id = 2;
  if (this->next_step_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->next_step_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StepSequence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.StepSequence)
  GOOGLE_DCHECK_NE(&from, this);
  const StepSequence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StepSequence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.StepSequence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.StepSequence)
    MergeFrom(*source);
  }
}

void StepSequence::MergeFrom(const StepSequence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.StepSequence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.graph_key() != 0) {
    set_graph_key(from.graph_key());
  }
  if (from.next_step_id() != 0) {
    set_next_step_id(from.next_step_id());
  }
}

void StepSequence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.StepSequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StepSequence::CopyFrom(const StepSequence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.StepSequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StepSequence::IsInitialized() const {
  return true;
}

void StepSequence::Swap(StepSequence* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    StepSequence* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void StepSequence::UnsafeArenaSwap(StepSequence* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void StepSequence::InternalSwap(StepSequence* other) {
  using std::swap;
  swap(graph_key_, other->graph_key_);
  swap(next_step_id_, other->next_step_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StepSequence::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetStepSequenceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetStepSequenceResponse::kStepSequenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetStepSequenceResponse::GetStepSequenceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_GetStepSequenceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.GetStepSequenceResponse)
}
GetStepSequenceResponse::GetStepSequenceResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  step_sequence_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_GetStepSequenceResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GetStepSequenceResponse)
}
GetStepSequenceResponse::GetStepSequenceResponse(const GetStepSequenceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      step_sequence_(from.step_sequence_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.GetStepSequenceResponse)
}

void GetStepSequenceResponse::SharedCtor() {
}

GetStepSequenceResponse::~GetStepSequenceResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.GetStepSequenceResponse)
  SharedDtor();
}

void GetStepSequenceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GetStepSequenceResponse::ArenaDtor(void* object) {
  GetStepSequenceResponse* _this = reinterpret_cast< GetStepSequenceResponse* >(object);
  (void)_this;
}
void GetStepSequenceResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GetStepSequenceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetStepSequenceResponse::descriptor() {
  ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetStepSequenceResponse& GetStepSequenceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::scc_info_GetStepSequenceResponse.base);
  return *internal_default_instance();
}


void GetStepSequenceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GetStepSequenceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  step_sequence_.Clear();
  _internal_metadata_.Clear();
}

bool GetStepSequenceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.GetStepSequenceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.StepSequence step_sequence = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_step_sequence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.GetStepSequenceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.GetStepSequenceResponse)
  return false;
#undef DO_
}

void GetStepSequenceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.GetStepSequenceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.StepSequence step_sequence = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->step_sequence_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->step_sequence(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.GetStepSequenceResponse)
}

::google::protobuf::uint8* GetStepSequenceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GetStepSequenceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.StepSequence step_sequence = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->step_sequence_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->step_sequence(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GetStepSequenceResponse)
  return target;
}

size_t GetStepSequenceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.GetStepSequenceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.StepSequence step_sequence = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->step_sequence_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->step_sequence(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStepSequenceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.GetStepSequenceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStepSequenceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetStepSequenceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.GetStepSequenceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.GetStepSequenceResponse)
    MergeFrom(*source);
  }
}

void GetStepSequenceResponse::MergeFrom(const GetStepSequenceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GetStepSequenceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  step_sequence_.MergeFrom(from.step_sequence_);
}

void GetStepSequenceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.GetStepSequenceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStepSequenceResponse::CopyFrom(const GetStepSequenceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GetStepSequenceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStepSequenceResponse::IsInitialized() const {
  return true;
}

void GetStepSequenceResponse::Swap(GetStepSequenceResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetStepSequenceResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetStepSequenceResponse::UnsafeArenaSwap(GetStepSequenceResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetStepSequenceResponse::InternalSwap(GetStepSequenceResponse* other) {
  using std::swap;
  CastToBase(&step_sequence_)->InternalSwap(CastToBase(&other->step_sequence_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetStepSequenceResponse::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::GetStatusRequest* Arena::CreateMaybeMessage< ::tensorflow::GetStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::GetStatusRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::GetStatusResponse* Arena::CreateMaybeMessage< ::tensorflow::GetStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::GetStatusResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CreateWorkerSessionRequest* Arena::CreateMaybeMessage< ::tensorflow::CreateWorkerSessionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CreateWorkerSessionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CreateWorkerSessionResponse* Arena::CreateMaybeMessage< ::tensorflow::CreateWorkerSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CreateWorkerSessionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::DeleteWorkerSessionRequest* Arena::CreateMaybeMessage< ::tensorflow::DeleteWorkerSessionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::DeleteWorkerSessionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::DeleteWorkerSessionResponse* Arena::CreateMaybeMessage< ::tensorflow::DeleteWorkerSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::DeleteWorkerSessionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::RegisterGraphRequest* Arena::CreateMaybeMessage< ::tensorflow::RegisterGraphRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::RegisterGraphRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::RegisterGraphResponse* Arena::CreateMaybeMessage< ::tensorflow::RegisterGraphResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::RegisterGraphResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::DeregisterGraphRequest* Arena::CreateMaybeMessage< ::tensorflow::DeregisterGraphRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::DeregisterGraphRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::DeregisterGraphResponse* Arena::CreateMaybeMessage< ::tensorflow::DeregisterGraphResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::DeregisterGraphResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CleanupAllRequest* Arena::CreateMaybeMessage< ::tensorflow::CleanupAllRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CleanupAllRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CleanupAllResponse* Arena::CreateMaybeMessage< ::tensorflow::CleanupAllResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CleanupAllResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::ExecutorOpts* Arena::CreateMaybeMessage< ::tensorflow::ExecutorOpts >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::ExecutorOpts >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::RunGraphRequest* Arena::CreateMaybeMessage< ::tensorflow::RunGraphRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::RunGraphRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::RunGraphResponse* Arena::CreateMaybeMessage< ::tensorflow::RunGraphResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::RunGraphResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CleanupGraphRequest* Arena::CreateMaybeMessage< ::tensorflow::CleanupGraphRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CleanupGraphRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CleanupGraphResponse* Arena::CreateMaybeMessage< ::tensorflow::CleanupGraphResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CleanupGraphResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::RecvTensorRequest* Arena::CreateMaybeMessage< ::tensorflow::RecvTensorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::RecvTensorRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::RecvTensorResponse* Arena::CreateMaybeMessage< ::tensorflow::RecvTensorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::RecvTensorResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::LoggingRequest* Arena::CreateMaybeMessage< ::tensorflow::LoggingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::LoggingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::LabeledStepStats* Arena::CreateMaybeMessage< ::tensorflow::LabeledStepStats >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::LabeledStepStats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::LoggingResponse* Arena::CreateMaybeMessage< ::tensorflow::LoggingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::LoggingResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::TraceOpts* Arena::CreateMaybeMessage< ::tensorflow::TraceOpts >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::TraceOpts >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::TracingRequest* Arena::CreateMaybeMessage< ::tensorflow::TracingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::TracingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::TracingResponse* Arena::CreateMaybeMessage< ::tensorflow::TracingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::TracingResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::RecvBufRequest* Arena::CreateMaybeMessage< ::tensorflow::RecvBufRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::RecvBufRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::RecvBufResponse* Arena::CreateMaybeMessage< ::tensorflow::RecvBufResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::RecvBufResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CompleteGroupRequest* Arena::CreateMaybeMessage< ::tensorflow::CompleteGroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CompleteGroupRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CompleteGroupResponse* Arena::CreateMaybeMessage< ::tensorflow::CompleteGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CompleteGroupResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CompleteInstanceRequest* Arena::CreateMaybeMessage< ::tensorflow::CompleteInstanceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CompleteInstanceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::CompleteInstanceResponse* Arena::CreateMaybeMessage< ::tensorflow::CompleteInstanceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CompleteInstanceResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::GetStepSequenceRequest* Arena::CreateMaybeMessage< ::tensorflow::GetStepSequenceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::GetStepSequenceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::StepSequence* Arena::CreateMaybeMessage< ::tensorflow::StepSequence >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::StepSequence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::GetStepSequenceResponse* Arena::CreateMaybeMessage< ::tensorflow::GetStepSequenceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::GetStepSequenceResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
